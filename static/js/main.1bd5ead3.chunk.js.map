{"version":3,"sources":["components/MapVisualization.js","components/TimelineChart.js","components/StateRankingChart.js","components/NuclearProximityAnalysis.js","components/ProximityAnalysis.js","components/DataControls.js","utils/dataProcessing.js","App.js","reportWebVitals.js","index.js"],"names":["MapVisualization","_ref","ufoData","militaryBaseData","nuclearReactorData","usMapData","svgRef","useRef","tooltipRef","dimensions","setDimensions","useState","width","height","useEffect","handleResize","containerWidth","current","parentElement","clientWidth","window","addEventListener","removeEventListener","svg","d3","tooltip","selectAll","remove","attr","projection","fitSize","topojson","objects","states","path","stateNameToAbbr","Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming","District of Columbia","sightingsByState","v","length","d","state","toUpperCase","console","log","Array","from","keys","slice","map","colorScale","domain","values","append","data","features","join","stateName","properties","name","stateAbbr","count","has","get","toLowerCase","on","event","this","style","html","toLocaleString","pageX","pageY","coords","longitude","latitude","date","datetime","city","shape","duration","type","branch","bufferRadius","earthRadius","forEach","reactor","bufferRadiusDegrees","Math","PI","circle","center","radius","datum","legendX","legendY","legendScale","range","legendAxis","ticks","tickFormat","call","text","mainLegend","React","createElement","className","ref","TimelineChart","yearRange","margin","innerWidth","innerHeight","yearCounts","year","yearData","_ref2","sort","a","b","xScale","yScale","g","xAxis","yAxis","line","x","y","curve","stateNameMap","AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","DC","PR","GU","VI","AS","MP","BC","ON","QC","AB","Wa","Ca","Tx","Fl","Ny","","StateRankingChart","stateCounts","stateData","stateCode","warn","padding","bandwidth","currentTarget","NuclearProximityAnalysis","sightingsWithDistance","sighting","distances","dLat","dLon","sin","cos","atan2","sqrt","nearestReactorDistance","min","distanceRanges","distanceCounts","maxDist","filter","s","distance","percentage","toString","toFixed","ProximityAnalysis","facilityData","facilityType","distanceThresholds","proximityData","minDistance","Infinity","nearestFacility","facility","calculateDistance","lat1","lon1","lat2","lon2","item","thresholdCounts","threshold","barGroups","barColor","DataControls","onYearRangeChange","selectedStates","onStateSelection","allStates","selectedShapes","onShapeSelection","ufoShapes","showMilitaryBases","onToggleMilitaryBases","showNuclearReactors","onToggleNuclearReactors","viewMode","onViewModeChange","isExpanded","setIsExpanded","tempYearRange","setTempYearRange","stateSearchTerm","setStateSearchTerm","shapeSearchTerm","setShapeSearchTerm","handleYearInputChange","index","value","newRange","parseInt","filteredStates","includes","filteredShapes","onClick","max","onChange","e","target","applyYearRange","validRange","placeholder","key","checked","handleStateToggle","handleShapeToggle","charAt","processUFOData","csvText","Papa","parse","header","skipEmptyLines","dynamicTyping","Date","getFullYear","parseFloat","processMilitaryBaseData","base","processNuclearReactorData","App","setUfoData","setMilitaryBaseData","setNuclearReactorData","setUsMapData","loading","setLoading","error","setError","loadingProgress","setLoadingProgress","setYearRange","setSelectedStates","setSelectedShapes","setShowMilitaryBases","setShowNuclearReactors","setViewMode","activeTab","setActiveTab","async","ufoResponse","fetch","ok","Error","status","statusText","ufoText","substring","processedUFOData","basesResponse","basesText","processedBaseData","reactorResponse","reactorText","processedReactorData","mapResponse","mapData","json","setTimeout","err","message","fetchData","Set","filteredUFOData","yearMatch","stateMatch","shapeMatch","location","reload","description","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"qWAqZeA,MAhZUC,IAAkE,IAAjEC,QAAEA,EAAOC,iBAAEA,EAAgBC,mBAAEA,EAAkBC,UAAEA,GAAWJ,EACpF,MAAMK,EAASC,mBACTC,EAAaD,oBACZE,EAAYC,GAAiBC,mBAAS,CAAEC,MAAO,EAAGC,OAAQ,IAqYjE,OAlYAC,oBAAU,KACR,MAAMC,EAAeA,KACnB,MAAMC,EAAiBV,EAAOW,QAAQC,cAAcC,YACpDT,EAAc,CACZE,MAAOI,EACPH,OAAyB,GAAjBG,KAOZ,OAHAD,IACAK,OAAOC,iBAAiB,SAAUN,GAE3B,IAAMK,OAAOE,oBAAoB,SAAUP,IACjD,IAGHD,oBAAU,KACR,IAAKT,IAAcI,EAAWG,QAAUH,EAAWI,OAAQ,OAE3D,MAAMU,EAAMC,IAAUlB,EAAOW,SACvBQ,EAAUD,IAAUhB,EAAWS,SAGrCM,EAAIG,UAAU,KAAKC,SAEnBJ,EACGK,KAAK,QAASnB,EAAWG,OACzBgB,KAAK,SAAUnB,EAAWI,QAC1Be,KAAK,UAAW,CAAC,EAAG,EAAGnB,EAAWG,MAAOH,EAAWI,SACpDe,KAAK,QAAS,kCAGjB,MAAMC,EAAaL,MAChBM,QAAQ,CAACrB,EAAWG,MAAOH,EAAWI,QAASkB,IAAiB1B,EAAWA,EAAU2B,QAAQC,SAG1FC,EAAOV,MAAaK,WAAWA,GAG/BM,EAAkB,CACtBC,QAAW,KAAMC,OAAU,KAAMC,QAAW,KAAMC,SAAY,KAAMC,WAAc,KAClFC,SAAY,KAAMC,YAAe,KAAMC,SAAY,KAAMC,QAAW,KAAMC,QAAW,KACrFC,OAAU,KAAMC,MAAS,KAAMC,SAAY,KAAMC,QAAW,KAAMC,KAAQ,KAC1EC,OAAU,KAAMC,SAAY,KAAMC,UAAa,KAAMC,MAAS,KAAMC,SAAY,KAChFC,cAAiB,KAAMC,SAAY,KAAMC,UAAa,KAAMC,YAAe,KAAMC,SAAY,KAC7FC,QAAW,KAAMC,SAAY,KAAMC,OAAU,KAAMC,gBAAiB,KAAMC,aAAc,KACxFC,aAAc,KAAMC,WAAY,KAAMC,iBAAkB,KAAMC,eAAgB,KAAMC,KAAQ,KAC5FC,SAAY,KAAMC,OAAU,KAAMC,aAAgB,KAAMC,eAAgB,KAAMC,iBAAkB,KAChGC,eAAgB,KAAMC,UAAa,KAAMC,MAAS,KAAMC,KAAQ,KAAMC,QAAW,KACjFC,SAAY,KAAMC,WAAc,KAAMC,gBAAiB,KAAMC,UAAa,KAAMC,QAAW,KAC3FC,uBAAwB,MAIpBC,EAAmB/D,IACvBtB,EACAsF,GAAKA,EAAEC,OACPC,GAAKA,EAAEC,MAAQD,EAAEC,MAAMC,cAAgB,WAIzCC,QAAQC,IAAI,2BAA4BC,MAAMC,KAAKT,EAAiBU,SACpEJ,QAAQC,IAAI,8BAA+B5F,EAAQgG,MAAM,EAAG,GAAGC,IAAIT,GAAKA,EAAEC,QAG1E,MAAMS,EAAa5E,IAAmBA,KACnC6E,OAAO,CAAC,EAAG7E,IAAOuE,MAAMC,KAAKT,EAAiBe,YAAc,IAmM/D,GAhMe/E,EAAIgF,OAAO,KACvB7E,UAAU,QACV8E,KAAKzE,IAAiB1B,EAAWA,EAAU2B,QAAQC,QAAQwE,UAC3DC,KAAK,QACL9E,KAAK,OAAQ8D,IAEZ,MAAMiB,EAAYjB,EAAEkB,WAAWC,KACzBC,EAAY3E,EAAgBwE,GAGlC,IAAII,EAAQ,EAQZ,OAPID,GAAavB,EAAiByB,IAAIF,GACpCC,EAAQxB,EAAiB0B,IAAIH,GACpBA,GAAavB,EAAiByB,IAAIF,EAAUI,iBACrDH,EAAQxB,EAAiB0B,IAAIH,EAAUI,gBAIlCd,EAAWW,KAEnBnF,KAAK,SAAU,QACfA,KAAK,eAAgB,IACrBA,KAAK,IAAKM,GACVN,KAAK,QAAS,SACduF,GAAG,YAAa,SAASC,EAAO1B,GAC/B,MAAMiB,EAAYjB,EAAEkB,WAAWC,KACzBC,EAAY3E,EAAgBwE,GAGlC,IAAII,EAAQ,EACRD,GAAavB,EAAiByB,IAAIF,GACpCC,EAAQxB,EAAiB0B,IAAIH,GACpBA,GAAavB,EAAiByB,IAAIF,EAAUI,eACrDH,EAAQxB,EAAiB0B,IAAIH,EAAUI,eAC9BP,GAAapB,EAAiByB,IAAIL,KAC3CI,EAAQxB,EAAiB0B,IAAIN,IAG/BnF,IAAU6F,MACPzF,KAAK,SAAU,QACfA,KAAK,eAAgB,KAExBH,EACG6F,MAAM,UAAW,GACjBC,gBAAgBZ,iBAAyBI,EAAMS,kCAC/CF,MAAM,OAASF,EAAMK,MAAQ,GAAM,MACnCH,MAAM,MAAQF,EAAMM,MAAQ,GAAM,QAEtCP,GAAG,YAAa,SAASC,GACxB3F,EACG6F,MAAM,OAASF,EAAMK,MAAQ,GAAM,MACnCH,MAAM,MAAQF,EAAMM,MAAQ,GAAM,QAEtCP,GAAG,WAAY,WACd3F,IAAU6F,MACPzF,KAAK,SAAU,QACfA,KAAK,eAAgB,IAExBH,EAAQ6F,MAAM,UAAW,KAI7B/F,EAAIgF,OAAO,KACR7E,UAAU,UACV8E,KAAKtG,GACLwG,KAAK,UACL9E,KAAK,KAAM8D,IACV,MAAMiC,EAAS9F,EAAW,CAAC6D,EAAEkC,UAAWlC,EAAEmC,WAC1C,OAAKF,EACEA,EAAO,GADM,OAGrB/F,KAAK,KAAM8D,IACV,MAAMiC,EAAS9F,EAAW,CAAC6D,EAAEkC,UAAWlC,EAAEmC,WAC1C,OAAKF,EACEA,EAAO,GADM,OAGrB/F,KAAK,IAAK,GACVA,KAAK,OAAQ,0BACbA,KAAK,SAAU,0BACfA,KAAK,eAAgB,GACrBA,KAAK,QAAS,gBACduF,GAAG,YAAa,SAASC,EAAO1B,GAC/BlE,IAAU6F,MACPzF,KAAK,IAAK,GACVA,KAAK,OAAQ,0BAEhBH,EACG6F,MAAM,UAAW,GACjBC,2EAES7B,EAAEoC,MAAQpC,EAAEqC,UAAY,wCACpBrC,EAAEsC,MAAQ,cAActC,EAAEC,OAAS,qCACtCD,EAAEuC,OAAS,wCACRvC,EAAEwC,UAAY,qBAE3BZ,MAAM,OAASF,EAAMK,MAAQ,GAAM,MACnCH,MAAM,MAAQF,EAAMM,MAAQ,GAAM,QAEtCP,GAAG,WAAY,WACd3F,IAAU6F,MACPzF,KAAK,IAAK,GACVA,KAAK,OAAQ,0BAEhBH,EAAQ6F,MAAM,UAAW,KAIzBnH,EAAiBsF,OAAS,GAC5BlE,EAAIgF,OAAO,KACR7E,UAAU,QACV8E,KAAKrG,GACLuG,KAAK,QACL9E,KAAK,YAAa8D,IACjB,MAAMiC,EAAS9F,EAAW,CAAC6D,EAAEkC,UAAWlC,EAAEmC,WAC1C,OAAKF,eACeA,EAAO,OAAOA,EAAO,MADrB,OAGrB/F,KAAK,IAAK,oCACVA,KAAK,OAAQ,0BACbA,KAAK,SAAU,0BACfA,KAAK,eAAgB,GACrBA,KAAK,QAAS,iBACduF,GAAG,YAAa,SAASC,EAAO1B,GAC/BlE,IAAU6F,MACPzF,KAAK,OAAQ,0BAEhBH,EACG6F,MAAM,UAAW,GACjBC,gFAES7B,EAAEmB,MAAQ,sCACVnB,EAAEyC,MAAQ,oCACRzC,EAAE0C,QAAU,uBAEvBd,MAAM,OAASF,EAAMK,MAAQ,GAAM,MACnCH,MAAM,MAAQF,EAAMM,MAAQ,GAAM,QAEtCP,GAAG,WAAY,WACd3F,IAAU6F,MACPzF,KAAK,OAAQ,0BAEhBH,EAAQ6F,MAAM,UAAW,KAK3BlH,EAAmBqF,OAAS,GAC5BlE,EAAIgF,OAAO,KACV7E,UAAU,UACV8E,KAAKpG,GACLsG,KAAK,UACL9E,KAAK,KAAM8D,IACR,MAAMiC,EAAS9F,EAAW,CAAC6D,EAAEkC,UAAWlC,EAAEmC,WAC1C,OAAKF,EACEA,EAAO,GADM,OAGvB/F,KAAK,KAAM8D,IACR,MAAMiC,EAAS9F,EAAW,CAAC6D,EAAEkC,UAAWlC,EAAEmC,WAC1C,OAAKF,EACEA,EAAO,GADM,OAGvB/F,KAAK,IAAK,GACVA,KAAK,OAAQ,0BACbA,KAAK,SAAU,wBACfA,KAAK,eAAgB,KACrBA,KAAK,QAAS,mBACduF,GAAG,YAAa,SAASC,EAAO1B,GAC7BlE,IAAU6F,MACTzF,KAAK,IAAK,GACVA,KAAK,OAAQ,0BAEdH,EACC6F,MAAM,UAAW,GACjBC,uFAEW7B,EAAEmB,MAAQ,yCACTnB,EAAEC,OAAS,oCACZD,EAAEyC,MAAQ,oCAErBb,MAAM,OAASF,EAAMK,MAAQ,GAAM,MACnCH,MAAM,MAAQF,EAAMM,MAAQ,GAAM,QAEtCP,GAAG,WAAY,WACZ3F,IAAU6F,MACTzF,KAAK,IAAK,GACVA,KAAK,OAAQ,0BAEdH,EAAQ6F,MAAM,UAAW,KAK7BlH,EAAmBqF,OAAS,EAAG,CAC/B,MAAM4C,EAAe,GACfC,EAAc,KAEpBlI,EAAmBmI,QAAQC,IAE3B,MAAMC,EAAuBJ,EAAeC,GAAgB,IAAMI,KAAKC,IAGjEC,EAASpH,MACVqH,OAAO,CAACL,EAAQZ,UAAWY,EAAQX,WACnCiB,OAAOL,GAEZlH,EAAIgF,OAAO,QACNwC,MAAMH,KACNhH,KAAK,IAAKM,GACVN,KAAK,OAAQ,0BACbA,KAAK,SAAU,0BACfA,KAAK,eAAgB,GACrBA,KAAK,mBAAoB,OACzBA,KAAK,QAAS,oBAKvB,MAEMoH,EAAUvI,EAAWG,MAFP,IAE6B,GAC3CqI,EAAUxI,EAAWI,OAAS,GAE9BqI,EAAc1H,MACjB6E,OAAO,CAAC,EAAG7E,IAAOuE,MAAMC,KAAKT,EAAiBe,aAC9C6C,MAAM,CAAC,EAPU,MASdC,EAAa5H,IAAc0H,GAC9BG,MAAM,GACNC,WAAW9H,IAAU,SAGXD,EAAIgF,OAAO,QACFA,OAAO,kBAC1B3E,KAAK,KAAM,sBACXA,KAAK,KAAM,MACXA,KAAK,KAAM,MACXA,KAAK,KAAM,QACXA,KAAK,KAAM,MAELF,UAAU,QAChB8E,KAAK,CAAC,EAAG,GAAK,GAAK,GAAK,GAAK,IAC7BE,KAAK,QACL9E,KAAK,SAAU8D,GAAS,IAAJA,EAAU,KAC9B9D,KAAK,aAAc8D,GAAKU,EAAWV,EAAIlE,IAAOuE,MAAMC,KAAKT,EAAiBe,aAG7E/E,EAAIgF,OAAO,QACR3E,KAAK,IAAKoH,GACVpH,KAAK,IAAKqH,GACVrH,KAAK,QAhCY,KAiCjBA,KAAK,SAhCa,IAiClB0F,MAAM,OAAQ,4BAGjB/F,EAAIgF,OAAO,KACR3E,KAAK,yBAA0BoH,MAAYC,EArCzB,OAsClBM,KAAKH,GACLxH,KAAK,YAAa,QAGrBL,EAAIgF,OAAO,QACR3E,KAAK,IAAKoH,GACVpH,KAAK,IAAKqH,EAAU,GACpBrH,KAAK,YAAa,QAClB4H,KAAK,0BAGR,MAAMC,EAAalI,EAAIgF,OAAO,KAC3B3E,KAAK,6BAA8BnB,EAAWI,OAAS,OAI1D4I,EAAWlD,OAAO,UACf3E,KAAK,KAAM,IACXA,KAAK,KAAM,IACXA,KAAK,IAAK,GACVA,KAAK,OAAQ,0BACbA,KAAK,SAAU,0BACfA,KAAK,eAAgB,GAExB6H,EAAWlD,OAAO,QACf3E,KAAK,IAAK,IACVA,KAAK,IAAK,IACV4H,KAAK,gBACL5H,KAAK,YAAa,QAGrB6H,EAAWlD,OAAO,QACf3E,KAAK,YAAa,qBAClBA,KAAK,IAAK,mCACVA,KAAK,OAAQ,0BACbA,KAAK,SAAU,0BACfA,KAAK,eAAgB,GAExB6H,EAAWlD,OAAO,QACf3E,KAAK,IAAK,IACVA,KAAK,IAAK,IACV4H,KAAK,iBACL5H,KAAK,YAAa,QAGrB6H,EAAWlD,OAAO,UACf3E,KAAK,KAAM,IACXA,KAAK,KAAM,IACXA,KAAK,IAAK,GACVA,KAAK,OAAQ,0BACbA,KAAK,SAAU,wBACfA,KAAK,eAAgB,KAExB6H,EAAWlD,OAAO,QACf3E,KAAK,IAAK,IACVA,KAAK,IAAK,IACV4H,KAAK,mBACL5H,KAAK,YAAa,SAEpB,CAACvB,EAAWH,EAASC,EAAkBC,EAAoBK,IAG5DiJ,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKE,IAAKvJ,IACVoJ,IAAAC,cAAA,OAAKC,UAAU,UAAUC,IAAKrJ,aCzPrBsJ,MAnJO7J,IAA4B,IAA3BC,QAAEA,EAAO6J,UAAEA,GAAW9J,EAC3C,MAAMK,EAASC,mBACTC,EAAaD,oBACZE,EAAYC,GAAiBC,mBAAS,CAAEC,MAAO,EAAGC,OAAQ,IAwIjE,OArIAC,oBAAU,KACR,MAAMC,EAAeA,KACnB,MAAMC,EAAiBV,EAAOW,QAAQC,cAAcC,YACpDT,EAAc,CACZE,MAAOI,EACPH,OAAQ,OAOZ,OAHAE,IACAK,OAAOC,iBAAiB,SAAUN,GAE3B,IAAMK,OAAOE,oBAAoB,SAAUP,IACjD,IAGHD,oBAAU,KACR,IAAKZ,EAAQuF,SAAWhF,EAAWG,QAAUH,EAAWI,OAAQ,OAEhE,MAAMU,EAAMC,IAAUlB,EAAOW,SACvBQ,EAAUD,IAAUhB,EAAWS,SAGrCM,EAAIG,UAAU,KAAKC,SAEnBJ,EACGK,KAAK,QAASnB,EAAWG,OACzBgB,KAAK,SAAUnB,EAAWI,QAC1Be,KAAK,UAAW,CAAC,EAAG,EAAGnB,EAAWG,MAAOH,EAAWI,SACpDe,KAAK,QAAS,kCAGjBL,EAAIgF,OAAO,QACR3E,KAAK,IAAKnB,EAAWG,MAAQ,GAC7BgB,KAAK,IAAK,IACVA,KAAK,cAAe,UACpB0F,MAAM,YAAa,QACnBA,MAAM,cAAe,QACrBkC,KAAK,2BAGR,MAAMQ,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACjDC,EAAaxJ,EAAWG,MAAQoJ,EAAcA,EAC9CE,EAAczJ,EAAWI,OAASmJ,EAAaA,EAG/CG,EAAa3I,IACjBtB,EACAsF,GAAKA,EAAEC,OACPC,GAAKA,EAAE0E,MAIHC,EAAWtE,MAAMC,KAAKmE,EAAYG,IAAA,IAAEF,EAAMrD,GAAMuD,EAAA,MAAM,CAAEF,OAAMrD,WACjEwD,KAAK,CAACC,EAAGC,IAAMD,EAAEJ,KAAOK,EAAEL,MAGvBM,EAASlJ,MACZ6E,OAAO,CAAC7E,IAAO6I,EAAU3E,GAAKA,EAAE0E,MAAO5I,IAAO6I,EAAU3E,GAAKA,EAAE0E,QAC/DjB,MAAM,CAAC,EAAGc,IAEPU,EAASnJ,MACZ6E,OAAO,CAAC,EAAoC,IAAjC7E,IAAO6I,EAAU3E,GAAKA,EAAEqB,SACnCoC,MAAM,CAACe,EAAa,IAGjBU,EAAIrJ,EAAIgF,OAAO,KAClB3E,KAAK,yBAA0BoI,MAAgBA,MAG5Ca,EAAQrJ,IAAckJ,GACzBrB,MAAM,IACNC,WAAW5D,GAAKA,GAEnBkF,EAAErE,OAAO,KACN3E,KAAK,4BAA6BsI,MAClCX,KAAKsB,GAER,MAAMC,EAAQtJ,IAAYmJ,GACvBtB,MAAM,IAETuB,EAAErE,OAAO,KACNgD,KAAKuB,GAGRF,EAAErE,OAAO,QACN3E,KAAK,yBAA0BqI,EAAa,MAAMC,EAAc,OAChE5C,MAAM,cAAe,UACrBkC,KAAK,QAERoB,EAAErE,OAAO,QACN3E,KAAK,YAAa,eAClBA,KAAK,KAAM,IACXA,KAAK,KAAMsI,EAAc,GACzB5C,MAAM,cAAe,UACrBkC,KAAK,uBAGR,MAAMuB,EAAOvJ,MACVwJ,EAAEtF,GAAKgF,EAAOhF,EAAE0E,OAChBa,EAAEvF,GAAKiF,EAAOjF,EAAEqB,QAChBmE,MAAM1J,KAGToJ,EAAErE,OAAO,QACNwC,MAAMsB,GACNzI,KAAK,OAAQ,QACbA,KAAK,SAAU,aACfA,KAAK,eAAgB,GACrBA,KAAK,IAAKmJ,GAGbH,EAAElJ,UAAU,QACT8E,KAAK6D,GACL3D,KAAK,UACL9E,KAAK,QAAS,OACdA,KAAK,KAAM8D,GAAKgF,EAAOhF,EAAE0E,OACzBxI,KAAK,KAAM8D,GAAKiF,EAAOjF,EAAEqB,QACzBnF,KAAK,IAAK,GACVA,KAAK,OAAQ,aACbuF,GAAG,YAAa,CAACC,EAAO1B,KACvBjE,EACG6F,MAAM,UAAW,GACjBC,gBAAgB7B,EAAE0E,kBAAkB1E,EAAEqB,mBACtCO,MAAM,OAASF,EAAMK,MAAQ,GAAM,MACnCH,MAAM,MAAQF,EAAMM,MAAQ,GAAM,QAEtCP,GAAG,WAAY,KACd1F,EAAQ6F,MAAM,UAAW,MAG5B,CAACpH,EAASO,IAGXiJ,IAAAC,cAAA,OAAKC,UAAU,sBACbF,IAAAC,cAAA,OAAKE,IAAKvJ,IACVoJ,IAAAC,cAAA,OAAKC,UAAU,UAAUC,IAAKrJ,aC7IpC,MAAM2K,EAAe,CACnBC,GAAM,UACNC,GAAM,SACNC,GAAM,UACNC,GAAM,WACNC,GAAM,aACNC,GAAM,WACNC,GAAM,cACNC,GAAM,WACNC,GAAM,UACNC,GAAM,UACNC,GAAM,SACNC,GAAM,QACNC,GAAM,WACNC,GAAM,UACNC,GAAM,OACNC,GAAM,SACNC,GAAM,WACNC,GAAM,YACNC,GAAM,QACNC,GAAM,WACNC,GAAM,gBACNC,GAAM,WACNC,GAAM,YACNC,GAAM,cACNC,GAAM,WACNC,GAAM,UACNC,GAAM,WACNC,GAAM,SACNC,GAAM,gBACNC,GAAM,aACNC,GAAM,aACNC,GAAM,WACNC,GAAM,iBACNC,GAAM,eACNC,GAAM,OACNC,GAAM,WACNC,GAAM,SACNC,GAAM,eACNC,GAAM,eACNC,GAAM,iBACNC,GAAM,eACNC,GAAM,YACNC,GAAM,QACNC,GAAM,OACNC,GAAM,UACNC,GAAM,WACNC,GAAM,aACNC,GAAM,gBACNC,GAAM,YACNC,GAAM,UACNC,GAAM,uBAENC,GAAM,cACNC,GAAM,OACNC,GAAM,iBACNC,GAAM,iBACNC,GAAM,2BAENC,GAAM,mBACNC,GAAM,UACNC,GAAM,SACNC,GAAM,UAENC,GAAM,aACNC,GAAM,aACNC,GAAM,QACNC,GAAM,UACNC,GAAM,WACNC,GAAI,oBA6KSC,MA1KWrP,IAAiB,IAAhBC,QAAEA,GAASD,EACpC,MAAMK,EAASC,mBACTC,EAAaD,oBACZE,EAAYC,GAAiBC,mBAAS,CAAEC,MAAO,EAAGC,OAAQ,IA+JjE,OA5JAC,oBAAU,KACR,MAAMC,EAAeA,KACnB,MAAMC,EAAiBV,EAAOW,QAAQC,cAAcC,YACpDT,EAAc,CACZE,MAAOI,EACPH,OAAQ,OAOZ,OAHAE,IACAK,OAAOC,iBAAiB,SAAUN,GAE3B,IAAMK,OAAOE,oBAAoB,SAAUP,IACjD,IAGHD,oBAAU,KACR,IAAKZ,EAAQuF,SAAWhF,EAAWG,QAAUH,EAAWI,OAAQ,OAEhE,MAAMU,EAAMC,IAAUlB,EAAOW,SACvBQ,EAAUD,IAAUhB,EAAWS,SAGrCM,EAAIG,UAAU,KAAKC,SAEnBJ,EACGK,KAAK,QAASnB,EAAWG,OACzBgB,KAAK,SAAUnB,EAAWI,QAC1Be,KAAK,UAAW,CAAC,EAAG,EAAGnB,EAAWG,MAAOH,EAAWI,SACpDe,KAAK,QAAS,kCAGjBL,EAAIgF,OAAO,QACR3E,KAAK,IAAKnB,EAAWG,MAAQ,GAC7BgB,KAAK,IAAK,IACVA,KAAK,cAAe,UACpB0F,MAAM,YAAa,QACnBA,MAAM,cAAe,QACrBkC,KAAK,kCAGR,MAAMQ,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,IACjDC,EAAaxJ,EAAWG,MAAQoJ,EAAcA,EAC9CE,EAAczJ,EAAWI,OAASmJ,EAAaA,EAG/CuF,EAAc/N,IAClBtB,EACAsF,GAAKA,EAAEC,OACPC,GAAKA,EAAEC,OAITE,QAAQC,IAAI,yCAA0CC,MAAMC,KAAKuJ,EAAYtJ,SAG7E,MAAMuJ,EAAYzJ,MAAMC,KAAKuJ,EAAajF,IAAoB,IAAlB3E,EAAOoB,GAAMuD,EAEvD,MAAMmF,EAAY9J,EAAQA,EAAMC,cAAgBD,EAGhDE,QAAQC,IAAI,oBAAqBH,EAAO,SAAUoB,GAGlD,IAAIJ,EAAYwE,EAAasE,GAM7B,OALK9I,IACHd,QAAQ6J,KAAK,sCAAuCD,GACpD9I,EAAY8I,GAAa,iBAGpB,CACL9J,MAAO8J,EACP9I,UAAWA,EACXI,WAGDwD,KAAK,CAACC,EAAGC,IAAMA,EAAE1D,MAAQyD,EAAEzD,OAC3Bb,MAAM,EAAG,IAEZL,QAAQC,IAAI,4BAA6B0J,GAGzC,MAAM9E,EAASlJ,MACZ6E,OAAO,CAAC,EAAqC,IAAlC7E,IAAOgO,EAAW9J,GAAKA,EAAEqB,SACpCoC,MAAM,CAAC,EAAGc,IAEPU,EAASnJ,MACZ6E,OAAOmJ,EAAUrJ,IAAIT,GAAKA,EAAEiB,YAC5BwC,MAAM,CAAC,EAAGe,IACVyF,QAAQ,IAGL/E,EAAIrJ,EAAIgF,OAAO,KAClB3E,KAAK,yBAA0BoI,MAAgBA,MAG5Ca,EAAQrJ,IAAckJ,GACzBrB,MAAM,GACNC,WAAW9H,IAAU,OAExBoJ,EAAErE,OAAO,KACN3E,KAAK,4BAA6BsI,MAClCX,KAAKsB,GAER,MAAMC,EAAQtJ,IAAYmJ,GAE1BC,EAAErE,OAAO,KACNgD,KAAKuB,GAGRF,EAAErE,OAAO,QACN3E,KAAK,yBAA0BqI,EAAa,MAAMC,EAAc,OAChE5C,MAAM,cAAe,UACrBkC,KAAK,uBAGRoB,EAAElJ,UAAU,QACT8E,KAAKgJ,GACL9I,KAAK,QACL9E,KAAK,QAAS,OACdA,KAAK,IAAK,GACVA,KAAK,IAAK8D,GAAKiF,EAAOjF,EAAEiB,YACxB/E,KAAK,QAAS8D,GAAKgF,EAAOhF,EAAEqB,QAC5BnF,KAAK,SAAU+I,EAAOiF,aACtBhO,KAAK,OAAQ,aACbuF,GAAG,YAAa,CAACC,EAAO1B,KAEvBlE,IAAU4F,EAAMyI,eACbjO,KAAK,OAAQ,WAEhBH,EACG6F,MAAM,UAAW,GACjBC,gBAAgB7B,EAAEiB,uBAAuBjB,EAAEqB,MAAMS,8BACjDF,MAAM,OAASF,EAAMK,MAAQ,GAAM,MACnCH,MAAM,MAAQF,EAAMM,MAAQ,GAAM,QAEtCP,GAAG,WAAaC,IAEf5F,IAAU4F,EAAMyI,eACbjO,KAAK,OAAQ,aAEhBH,EAAQ6F,MAAM,UAAW,KAI7BsD,EAAElJ,UAAU,cACT8E,KAAKgJ,GACL9I,KAAK,QACL9E,KAAK,QAAS,aACdA,KAAK,IAAK8D,GAAKgF,EAAOhF,EAAEqB,OAAS,GACjCnF,KAAK,IAAK8D,GAAKiF,EAAOjF,EAAEiB,WAAagE,EAAOiF,YAAc,EAAI,GAC9DhO,KAAK,YAAa,QAClB4H,KAAK9D,GAAKA,EAAEqB,MAAMS,mBAEpB,CAACtH,EAASO,IAGXiJ,IAAAC,cAAA,OAAKC,UAAU,2BACbF,IAAAC,cAAA,OAAKE,IAAKvJ,IACVoJ,IAAAC,cAAA,OAAKC,UAAU,UAAUC,IAAKrJ,MC5DrBsP,MAnLkB7P,IAAqC,IAApCC,QAAEA,EAAOE,mBAAEA,GAAoBH,EAC/D,MAAMK,EAASC,oBACRE,EAAYC,GAAiBC,mBAAS,CAAEC,MAAO,EAAGC,OAAQ,IA0KjE,OAvKAC,oBAAU,KACR,MAAMC,EAAeA,KACnB,MAAMC,EAAiBV,EAAOW,QAAQC,cAAcC,YACpDT,EAAc,CACZE,MAAOI,EACPH,OAAQ,OAOZ,OAHAE,IACAK,OAAOC,iBAAiB,SAAUN,GAE3B,IAAMK,OAAOE,oBAAoB,SAAUP,IACjD,IAGHD,oBAAU,KACR,IAAKZ,EAAQuF,SAAWrF,EAAmBqF,SAAWhF,EAAWG,QAAUH,EAAWI,OAAQ,OAE9F,MAAMU,EAAMC,IAAUlB,EAAOW,SAG7BM,EAAIG,UAAU,KAAKC,SAEnBJ,EACGK,KAAK,QAASnB,EAAWG,OACzBgB,KAAK,SAAUnB,EAAWI,QAC1Be,KAAK,UAAW,CAAC,EAAG,EAAGnB,EAAWG,MAAOH,EAAWI,SACpDe,KAAK,QAAS,kCAGjB,MAAMmO,EAAwB7P,EAAQiG,IAAI6J,IAExC,MAAMC,EAAY7P,EAAmB+F,IAAIqC,IACvC,MACM0H,GAAQ1H,EAAQX,SAAWmI,EAASnI,UAAYa,KAAKC,GAAK,IAC1DwH,GAAQ3H,EAAQZ,UAAYoI,EAASpI,WAAac,KAAKC,GAAK,IAC5D6B,EACJ9B,KAAK0H,IAAIF,EAAK,GAAKxH,KAAK0H,IAAIF,EAAK,GACjCxH,KAAK2H,IAAIL,EAASnI,SAAWa,KAAKC,GAAK,KAAOD,KAAK2H,IAAI7H,EAAQX,SAAWa,KAAKC,GAAK,KACpFD,KAAK0H,IAAID,EAAK,GAAKzH,KAAK0H,IAAID,EAAK,GAEnC,OADU,EAAIzH,KAAK4H,MAAM5H,KAAK6H,KAAK/F,GAAI9B,KAAK6H,KAAK,EAAE/F,IAPzC,OAWZ,MAAO,IACFwF,EACHQ,uBAAwB9H,KAAK+H,OAAOR,MAKlCS,EAAiB,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KAC7CC,EAAiBD,EAAevK,IAAIyK,IACxC,MAAM7J,EAAQgJ,EAAsBc,OAAOC,GAAKA,EAAEN,wBAA0BI,GAASnL,OACrF,MAAO,CACLsL,SAAUH,EACV7J,QACAiK,WAAajK,EAAQgJ,EAAsBtK,OAAU,OAKnDuE,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACjDC,EAAaxJ,EAAWG,MAAQoJ,EAAcA,EAC9CE,EAAczJ,EAAWI,OAASmJ,EAAaA,EAG/CU,EAASlJ,MACZ6E,OAAOqK,EAAevK,IAAIT,GAAKA,EAAEuL,aACjC9H,MAAM,CAAC,EAAGc,IACV0F,QAAQ,IAELhF,EAASnJ,MACZ6E,OAAO,CAAC,EAA+C,IAA5C7E,IAAOmP,EAAgBjL,GAAKA,EAAEsL,cACzC7H,MAAM,CAACe,EAAa,IAGjBU,EAAIrJ,EAAIgF,OAAO,KAClB3E,KAAK,yBAA0BoI,MAAgBA,MAGlDzI,EAAIgF,OAAO,QACR3E,KAAK,IAAKnB,EAAWG,MAAQ,GAC7BgB,KAAK,IAAK,IACVA,KAAK,cAAe,UACpB0F,MAAM,YAAa,QACnBA,MAAM,cAAe,QACrBkC,KAAK,wDAGR,MAAMqB,EAAQrJ,IAAckJ,GAC5BE,EAAErE,OAAO,KACN3E,KAAK,4BAA6BsI,MAClCX,KAAKsB,GAER,MAAMC,EAAQtJ,IAAYmJ,GACvBrB,WAAW5D,MAAQA,MACtBkF,EAAErE,OAAO,KACNgD,KAAKuB,GAGRF,EAAErE,OAAO,QACN3E,KAAK,yBAA0BqI,EAAa,MAAMC,EAAc,OAChE5C,MAAM,cAAe,UACrBkC,KAAK,4CAERoB,EAAErE,OAAO,QACN3E,KAAK,YAAa,eAClBA,KAAK,KAAM,IACXA,KAAK,KAAMsI,EAAc,GACzB5C,MAAM,cAAe,UACrBkC,KAAK,+BAGRoB,EAAElJ,UAAU,QACT8E,KAAKmK,GACLjK,KAAK,QACL9E,KAAK,QAAS,OACdA,KAAK,IAAK8D,GAAKgF,EAAOhF,EAAEqL,SAASE,aACjCrP,KAAK,IAAK8D,GAAKiF,EAAOjF,EAAEsL,aACxBpP,KAAK,QAAS8I,EAAOkF,aACrBhO,KAAK,SAAU8D,GAAKwE,EAAcS,EAAOjF,EAAEsL,aAC3CpP,KAAK,OAAQ,0BACbuF,GAAG,YAAa,SAASC,EAAO1B,GAC/BlE,IAAU6F,MACPzF,KAAK,OAAQ,0BAEAJ,IAAU,QAAQ+E,OAAO,OACtC3E,KAAK,QAAS,WACd0F,MAAM,WAAY,YAClBA,MAAM,aAAc,4BACpBA,MAAM,UAAW,QACjBA,MAAM,SAAU,kBAChBA,MAAM,gBAAiB,OACvBA,MAAM,iBAAkB,QACxBA,MAAM,UAAW,GAGjBA,MAAM,UAAW,GACjBC,qCACkB7B,EAAEqL,+DACjBrL,EAAEqB,MAAMS,mCAAmC9B,EAAEsL,WAAWE,QAAQ,oBAEnE5J,MAAM,OAASF,EAAMK,MAAQ,GAAM,MACnCH,MAAM,MAAQF,EAAMM,MAAQ,GAAM,QAEtCP,GAAG,WAAY,WACd3F,IAAU6F,MACPzF,KAAK,OAAQ,0BAEhBJ,IAAa,YAAYG,WAI7BiJ,EAAElJ,UAAU,cACT8E,KAAKmK,GACLjK,KAAK,QACL9E,KAAK,QAAS,aACdA,KAAK,IAAK8D,GAAKgF,EAAOhF,EAAEqL,SAASE,YAAcvG,EAAOkF,YAAc,GACpEhO,KAAK,IAAK8D,GAAKiF,EAAOjF,EAAEsL,YAAc,GACtCpP,KAAK,cAAe,UACpBA,KAAK,YAAa,QAClB4H,KAAK9D,MAAQA,EAAEsL,WAAWE,QAAQ,QAEpC,CAAChR,EAASE,EAAoBK,IAG/BiJ,IAAAC,cAAA,OAAKC,UAAU,+BACbF,IAAAC,cAAA,OAAKE,IAAKvJ,aC8DD6Q,MA9NWlR,IAA6C,IAA5CC,QAAEA,EAAOkR,aAAEA,EAAYC,aAAEA,GAAcpR,EAChE,MAAMK,EAASC,mBACTC,EAAaD,oBACZE,EAAYC,GAAiBC,mBAAS,CAAEC,MAAO,EAAGC,OAAQ,IAmNjE,OAhNAC,oBAAU,KACR,MAAMC,EAAeA,KACnB,MAAMC,EAAiBV,EAAOW,QAAQC,cAAcC,YACpDT,EAAc,CACZE,MAAOI,EACPH,OAAQ,OAOZ,OAHAE,IACAK,OAAOC,iBAAiB,SAAUN,GAE3B,IAAMK,OAAOE,oBAAoB,SAAUP,IACjD,IAGHD,oBAAU,KACR,IAAKZ,EAAQuF,SAAW2L,EAAa3L,SAAWhF,EAAWG,QAAUH,EAAWI,OAAQ,OAExF,MAAMU,EAAMC,IAAUlB,EAAOW,SACvBQ,EAAUD,IAAUhB,EAAWS,SAGrCM,EAAIG,UAAU,KAAKC,SAEnBJ,EACGK,KAAK,QAASnB,EAAWG,OACzBgB,KAAK,SAAUnB,EAAWI,QAC1Be,KAAK,UAAW,CAAC,EAAG,EAAGnB,EAAWG,MAAOH,EAAWI,SACpDe,KAAK,QAAS,kCAGjB,MAAMoI,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACjDC,EAAaxJ,EAAWG,MAAQoJ,EAAcA,EAC9CE,EAAczJ,EAAWI,OAASmJ,EAAaA,EAG/CsH,EAAqB,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KAGjDC,EAAgBrR,EAAQiG,IAAI6J,IAChC,IAAKA,EAASnI,WAAamI,EAASpI,UAAW,OAAO,KAGtD,IAAI4J,EAAcC,IACdC,EAAkB,KAgBtB,OAdAN,EAAa7I,QAAQoJ,IACnB,IAAKA,EAAS9J,WAAa8J,EAAS/J,UAAW,OAE/C,MAAMmJ,EApEYa,EAACC,EAAMC,EAAMC,EAAMC,KAC3C,MACM9B,GAAQ6B,EAAOF,GAAQnJ,KAAKC,GAAK,IACjCwH,GAAQ6B,EAAOF,GAAQpJ,KAAKC,GAAK,IACjC6B,EACJ9B,KAAK0H,IAAIF,EAAK,GAAKxH,KAAK0H,IAAIF,EAAK,GACjCxH,KAAK2H,IAAIwB,EAAOnJ,KAAKC,GAAK,KAAOD,KAAK2H,IAAI0B,EAAOrJ,KAAKC,GAAK,KAC3DD,KAAK0H,IAAID,EAAK,GAAKzH,KAAK0H,IAAID,EAAK,GAEnC,OADU,EAAIzH,KAAK4H,MAAM5H,KAAK6H,KAAK/F,GAAI9B,KAAK6H,KAAK,EAAE/F,IAPzC,MAmEaoH,CACf5B,EAASnI,SAAUmI,EAASpI,UAC5B+J,EAAS9J,SAAU8J,EAAS/J,WAG1BmJ,EAAWS,IACbA,EAAcT,EACdW,EAAkBC,KAIf,CACL3B,WACAe,SAAUS,EACVG,SAAUD,KAEXb,OAAOoB,GAAiB,OAATA,GAGZC,EAAkBZ,EAAmBnL,IAAIgM,IAC7C,MAAMpL,EAAQwK,EAAcV,OAAOoB,GAAQA,EAAKlB,UAAYoB,GAAW1M,OACjEuL,EAAcjK,EAAQwK,EAAc9L,OAAU,IAEpD,MAAO,CACL0M,YACApL,QACAiK,gBAKEtG,EAASlJ,MACZ6E,OAAOiL,EAAmBnL,IAAIT,GAAKA,EAAEuL,aACrC9H,MAAM,CAAC,EAAGc,IACV0F,QAAQ,IAELhF,EAASnJ,MACZ6E,OAAO,CAAC,EAAG,MACX8C,MAAM,CAACe,EAAa,IAGjBU,EAAIrJ,EAAIgF,OAAO,KAClB3E,KAAK,yBAA0BoI,MAAgBA,MAGlDzI,EAAIgF,OAAO,QACR3E,KAAK,IAAKnB,EAAWG,MAAQ,GAC7BgB,KAAK,IAAK,IACVA,KAAK,cAAe,UACpB0F,MAAM,YAAa,QACnBA,MAAM,cAAe,QACrBkC,mCAAoD,aAAjB6H,EAA8B,iBAAmB,wBAGvF,MAAMxG,EAAQrJ,IAAckJ,GACzBpB,WAAW5D,MAAQA,QAEtBkF,EAAErE,OAAO,KACN3E,KAAK,4BAA6BsI,MAClCX,KAAKsB,GACLnJ,UAAU,QACV4F,MAAM,cAAe,OACrB1F,KAAK,KAAM,SACXA,KAAK,KAAM,SACXA,KAAK,YAAa,eAErB,MAAMkJ,EAAQtJ,IAAYmJ,GACvBtB,MAAM,IACNC,WAAW5D,MAAQA,MAEtBkF,EAAErE,OAAO,KACNgD,KAAKuB,GAGRF,EAAErE,OAAO,QACN3E,KAAK,yBAA0BqI,EAAa,MAAMC,EAAc,OAChE5C,MAAM,cAAe,UACrBkC,KAAK,sBAERoB,EAAErE,OAAO,QACN3E,KAAK,YAAa,eAClBA,KAAK,KAAM,IACXA,KAAK,KAAMsI,EAAc,GACzB5C,MAAM,cAAe,UACrBkC,KAAK,2BAGR,MAAM4I,EAAYxH,EAAElJ,UAAU,cAC3B8E,KAAK0L,GACLxL,KAAK,KACL9E,KAAK,QAAS,aACdA,KAAK,YAAa8D,gBAAkBgF,EAAOhF,EAAEyM,UAAUlB,mBAEpDoB,EAA4B,aAAjBhB,EACf,yBACA,yBAEFe,EAAU7L,OAAO,QACd3E,KAAK,QAAS,OACdA,KAAK,IAAK,GACVA,KAAK,IAAK8D,GAAKiF,EAAOjF,EAAEsL,aACxBpP,KAAK,QAAS8I,EAAOkF,aACrBhO,KAAK,SAAU8D,GAAKwE,EAAcS,EAAOjF,EAAEsL,aAC3CpP,KAAK,OAAQyQ,GACbzQ,KAAK,SAA2B,aAAjByP,EACd,yBACA,0BACDzP,KAAK,eAAgB,GACrBuF,GAAG,YAAa,SAASC,EAAO1B,GAC/BlE,IAAU6F,MACPzF,KAAK,OAAyB,aAAjByP,EACZ,yBACA,0BAEJ5P,EACG6F,MAAM,UAAW,GACjBC,qCACkB7B,EAAEyM,2CACjBzM,EAAEqB,MAAMS,+CACR9B,EAAEsL,WAAWE,QAAQ,4BAExB5J,MAAM,OAASF,EAAMK,MAAQ,GAAM,MACnCH,MAAM,MAAQF,EAAMM,MAAQ,GAAM,QAEtCP,GAAG,WAAY,WACd3F,IAAU6F,MACPzF,KAAK,OAAQyQ,GAEhB5Q,EAAQ6F,MAAM,UAAW,KAI7B8K,EAAU7L,OAAO,QACd3E,KAAK,QAAS,aACdA,KAAK,IAAK8I,EAAOkF,YAAc,GAC/BhO,KAAK,IAAK8D,GAAKiF,EAAOjF,EAAEsL,YAAc,GACtCpP,KAAK,cAAe,UACpB4H,KAAK9D,MAAQA,EAAEsL,WAAWE,QAAQ,OAGrCtG,EAAErE,OAAO,QACN3E,KAAK,KAAM,GACXA,KAAK,KAAMqI,GACXrI,KAAK,KAAM+I,EAAO,KAClB/I,KAAK,KAAM+I,EAAO,KAClB/I,KAAK,SAAU,4BACfA,KAAK,mBAAoB,KAE5BgJ,EAAErE,OAAO,QACN3E,KAAK,IAAKqI,GACVrI,KAAK,IAAK+I,EAAO,IAAM,GACvB/I,KAAK,cAAe,OACpBA,KAAK,OAAQ,4BACb0F,MAAM,YAAa,QACnBkC,KAAK,QAEP,CAACtJ,EAASkR,EAAcC,EAAc5Q,IAGvCiJ,IAAAC,cAAA,OAAKC,UAAU,gCACbF,IAAAC,cAAA,OAAKE,IAAKvJ,IACVoJ,IAAAC,cAAA,OAAKC,UAAU,UAAUC,IAAKrJ,aCCrB8R,MAxOMrS,IAef,IAfgB8J,UACpBA,EAASwI,kBACTA,EAAiBC,eACjBA,EAAcC,iBACdA,EAAgBC,UAChBA,EAASC,eACTA,EAAcC,iBACdA,EAAgBC,UAChBA,EAASC,kBACTA,EAAiBC,sBACjBA,EAAqBC,oBACrBA,EAAmBC,wBACnBA,EAAuBC,SACvBA,EAAQC,iBACRA,GACDlT,EACC,MAAOmT,EAAYC,GAAiB1S,oBAAS,IACtC2S,EAAeC,GAAoB5S,mBAASoJ,IAC5CyJ,EAAiBC,GAAsB9S,mBAAS,KAChD+S,EAAiBC,GAAsBhT,mBAAS,IAGvDG,oBAAU,KACRyS,EAAiBxJ,IAChB,CAACA,IAGJ,MAAM6J,EAAwBA,CAACC,EAAOC,KACpC,MAAMC,EAAW,IAAIT,GACrBS,EAASF,GAASG,SAASF,EAAO,KAAO,EACzCP,EAAiBQ,IAgCbE,EAAiBvB,EACpB7B,OAAOlL,GAASA,EAAMuB,cAAcgN,SAASV,EAAgBtM,gBAC7DqD,OAGG4J,EAAiBtB,EACpBhC,OAAO5I,GAASA,EAAMf,cAAcgN,SAASR,EAAgBxM,gBAC7DqD,OAEH,OACEb,IAAAC,cAAA,OAAKC,2BAA4BwJ,EAAa,WAAa,MACzD1J,IAAAC,cAAA,OAAKC,UAAU,kBAAkBwK,QAASA,IAAMf,GAAeD,IAC7D1J,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,UAAQC,UAAU,iBACfwJ,EAAa,sBAAmB,wBAIrC1J,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,OAAKC,UAAU,sBACbF,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,aAAO,eACPD,IAAAC,cAAA,SACExB,KAAK,SACLsI,IAAI,OACJ4D,IAAI,OACJP,MAAOR,EAAc,GACrBgB,SAAWC,GAAMX,EAAsB,EAAGW,EAAEC,OAAOV,UAGvDpK,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,aAAO,aACPD,IAAAC,cAAA,SACExB,KAAK,SACLsI,IAAI,OACJ4D,IAAI,OACJP,MAAOR,EAAc,GACrBgB,SAAWC,GAAMX,EAAsB,EAAGW,EAAEC,OAAOV,UAGvDpK,IAAAC,cAAA,UACEC,UAAU,eACVwK,QAxEWK,KAErB,MAAMC,EAAa,CACjBhM,KAAK+H,IAAI6C,EAAc,GAAIA,EAAc,IACzC5K,KAAK2L,IAAIf,EAAc,GAAIA,EAAc,KAE3Cf,EAAkBmC,KAmET,UAIHhL,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,SACExB,KAAK,QACLsI,IAAI,OACJ4D,IAAI,OACJP,MAAOR,EAAc,GACrBgB,SAAWC,GAAMX,EAAsB,EAAGW,EAAEC,OAAOV,SAErDpK,IAAAC,cAAA,SACExB,KAAK,QACLsI,IAAI,OACJ4D,IAAI,OACJP,MAAOR,EAAc,GACrBgB,SAAWC,GAAMX,EAAsB,EAAGW,EAAEC,OAAOV,WAKzDpK,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,SACExB,KAAK,OACLwM,YAAY,mBACZb,MAAON,EACPc,SAAWC,GAAMd,EAAmBc,EAAEC,OAAOV,SAE9CtB,EAAe/M,OAAS,GACvBiE,IAAAC,cAAA,UACEC,UAAU,eACVwK,QAASA,IAAM3B,EAAiB,KACjC,cAKL/I,IAAAC,cAAA,OAAKC,UAAU,kBACZqK,EAAe9N,IAAIR,GAClB+D,IAAAC,cAAA,OAAKiL,IAAKjP,EAAOiE,UAAU,kBACzBF,IAAAC,cAAA,aACED,IAAAC,cAAA,SACExB,KAAK,WACL0M,QAASrC,EAAe0B,SAASvO,GACjC2O,SAAUA,IA9GD3O,KACrB6M,EAAe0B,SAASvO,GAC1B8M,EAAiBD,EAAe3B,OAAOC,GAAKA,IAAMnL,IAElD8M,EAAiB,IAAID,EAAgB7M,KA0GPmP,CAAkBnP,KAEnCA,KAIoB,IAA1BsO,EAAexO,QACdiE,IAAAC,cAAA,OAAKC,UAAU,cAAa,iCAKlCF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,SACExB,KAAK,OACLwM,YAAY,mBACZb,MAAOJ,EACPY,SAAWC,GAAMZ,EAAmBY,EAAEC,OAAOV,SAE9CnB,EAAelN,OAAS,GACvBiE,IAAAC,cAAA,UACEC,UAAU,eACVwK,QAASA,IAAMxB,EAAiB,KACjC,cAKLlJ,IAAAC,cAAA,OAAKC,UAAU,8BACZuK,EAAehO,IAAI8B,GAClByB,IAAAC,cAAA,OAAKiL,IAAK3M,EAAO2B,UAAU,kBACzBF,IAAAC,cAAA,aACED,IAAAC,cAAA,SACExB,KAAK,WACL0M,QAASlC,EAAeuB,SAASjM,GACjCqM,SAAUA,IA1IDrM,KACrB0K,EAAeuB,SAASjM,GAC1B2K,EAAiBD,EAAe9B,OAAOC,GAAKA,IAAM7I,IAElD2K,EAAiB,IAAID,EAAgB1K,KAsIP8M,CAAkB9M,KAEnCA,EAAM+M,OAAO,GAAGpP,cAAgBqC,EAAM/B,MAAM,MAIxB,IAA1BiO,EAAe1O,QACdiE,IAAAC,cAAA,OAAKC,UAAU,cAAa,iCAKlCF,IAAAC,cAAA,OAAKC,UAAU,sCACbF,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,SAAOC,UAAU,mBACfF,IAAAC,cAAA,SACExB,KAAK,WACL0M,QAAS/B,EACTwB,SAAUvB,IAEZrJ,IAAAC,cAAA,QAAMC,UAAU,gBAAe,kBAC/BF,IAAAC,cAAA,QAAMC,UAAU,0BAGlBF,IAAAC,cAAA,SAAOC,UAAU,mBACfF,IAAAC,cAAA,SACExB,KAAK,WACL0M,QAAS7B,EACTsB,SAAUrB,IAEZvJ,IAAAC,cAAA,QAAMC,UAAU,gBAAe,sBAC/BF,IAAAC,cAAA,QAAMC,UAAU,8CChOvB,MAAMqL,EAAkBC,IAQ7B,OAPgBC,IAAKC,MAAMF,EAAS,CAClCG,QAAQ,EACRC,gBAAgB,EAChBC,eAAe,IAIF/O,KAAKqK,OAAOb,GAElBA,EAASnI,UAAYmI,EAASpI,WACpCzB,IAAI6J,IAEL,MACM5F,EADU,IAAIoL,KAAKxF,EAASjI,UAAYiI,EAASlI,MAClC2N,cAErB,MAAO,IACFzF,EACH5F,OACAvC,SAAU6N,WAAW1F,EAASnI,UAC9BD,UAAW8N,WAAW1F,EAASpI,eAKxB+N,EAA2BT,IAQtC,OAPgBC,IAAKC,MAAMF,EAAS,CAClCG,QAAQ,EACRC,gBAAgB,EAChBC,eAAe,IAIF/O,KAAKqK,OAAO+E,GAElBA,EAAK/N,UAAY+N,EAAKhO,WAC5BzB,IAAIyP,IACE,IACFA,EACH/N,SAAU6N,WAAWE,EAAK/N,UAC1BD,UAAW8N,WAAWE,EAAKhO,eAKpBiO,EAA6BX,IAOtC,OANgBC,IAAKC,MAAMF,EAAS,CAClCG,QAAQ,EACRC,gBAAgB,EAChBC,eAAe,IAGF/O,KAAKqK,OAAOrI,GAClBA,EAAQX,UAAYW,EAAQZ,WAClCzB,IAAIqC,IACE,CACL3B,KAAM2B,EAAQ3B,KACdlB,MAAO6C,EAAQ7C,MACfkC,SAAU6N,WAAWlN,EAAQX,UAC7BD,UAAW8N,WAAWlN,EAAQZ,WAC9BO,KAAMK,EAAQL,MAAQ,8BCuWf2N,MA3Zf,WACE,MAAO5V,EAAS6V,GAAcpV,mBAAS,KAChCR,EAAkB6V,GAAuBrV,mBAAS,KAClDP,EAAoB6V,GAAyBtV,mBAAS,KACtDN,EAAW6V,GAAgBvV,mBAAS,OACpCwV,EAASC,GAAczV,oBAAS,IAChC0V,EAAOC,GAAY3V,mBAAS,OAC5B4V,EAAiBC,GAAsB7V,mBAAS,IAGhDoJ,EAAW0M,GAAgB9V,mBAAS,CAAC,KAAM,QAC3C6R,EAAgBkE,GAAqB/V,mBAAS,KAC9CgS,EAAgBgE,GAAqBhW,mBAAS,KAC9CmS,EAAmB8D,GAAwBjW,oBAAS,IACpDqS,EAAqB6D,GAA0BlW,oBAAS,IACxDuS,EAAU4D,GAAenW,mBAAS,QAClCoW,EAAWC,GAAgBrW,mBAAS,YAE3CG,oBAAU,KACUmW,WAChB,IACEpR,QAAQC,IAAI,6BACZ0Q,EAAmB,IAGnB3Q,QAAQC,IAAI,wBACZ,MAAMoR,QAAoBC,MAAM,+BAChC,IAAKD,EAAYE,GACf,MAAM,IAAIC,kCAAkCH,EAAYI,UAAUJ,EAAYK,cAEhF,MAAMC,QAAgBN,EAAY1N,OAClC3D,QAAQC,IAAI,mBAAoB0R,EAAQC,UAAU,EAAG,MACrD,MAAMC,EAAmBzC,EAAeuC,GACxCzB,EAAW2B,GACXlB,EAAmB,IAGnB3Q,QAAQC,IAAI,mCACZ,MAAM6R,QAAsBR,MAAM,gCAClC,IAAKQ,EAAcP,GACjB,MAAM,IAAIC,6CAA6CM,EAAcL,UAAUK,EAAcJ,cAE/F,MAAMK,QAAkBD,EAAcnO,OACtC3D,QAAQC,IAAI,8BAA+B8R,EAAUH,UAAU,EAAG,MAClE,MAAMI,EAAoBlC,EAAwBiC,GAClD5B,EAAoB6B,GACpBrB,EAAmB,IAGnB3Q,QAAQC,IAAI,oCACZ,MAAMgS,QAAwBX,MAAM,kCACpC,IAAKW,EAAgBV,GACnB,MAAM,IAAIC,8CAA8CS,EAAgBR,UAAUQ,EAAgBP,cAEpG,MAAMQ,QAAoBD,EAAgBtO,OAC1C3D,QAAQC,IAAI,+BAAgCiS,EAAYN,UAAU,EAAG,MACrE,MAAMO,EAAuBnC,EAA0BkC,GACvD9B,EAAsB+B,GACtBxB,EAAmB,IAGnB3Q,QAAQC,IAAI,2BACZ,MAAMmS,QAAoBd,MAAM,4BAChC,IAAKc,EAAYb,GACf,MAAM,IAAIC,qCAAqCY,EAAYX,UAAUW,EAAYV,cAEnF,MAAMW,QAAgBD,EAAYE,OAClCjC,EAAagC,GAEbrS,QAAQC,IAAI,iCACZ0Q,EAAmB,KACnB4B,WAAW,IAAMhC,GAAW,GAAQ,KACpC,MAAOiC,GACPxS,QAAQwQ,MAAM,sBAAuBgC,GACrC/B,EAAS,wBAA0B+B,EAAIC,SACvClC,GAAW,KAIfmC,IACC,IAGH,MAAM1F,EAAY,IAAI,IAAI2F,IAAItY,EAAQiG,IAAIT,GAAKA,EAAEuC,SAAS4I,OAAO5I,GAASA,GAAmB,YAAVA,GAG7EyK,EAAY,IAAI,IAAI8F,IAAItY,EAAQiG,IAAIT,GAAKA,EAAEC,SAASkL,OAAOlL,GAASA,GAGpE8S,EAAkBvY,EAAQ2Q,OAAOb,IACrC,MAAM0I,EAAY1I,EAAS5F,MAAQL,EAAU,IAAMiG,EAAS5F,MAAQL,EAAU,GACxE4O,EAAuC,IAA1BnG,EAAe/M,QAAgB+M,EAAe0B,SAASlE,EAASrK,OAC7EiT,EAAuC,IAA1BjG,EAAelN,QAAgBkN,EAAeuB,SAASlE,EAAS/H,OACnF,OAAOyQ,GAAaC,GAAcC,IAGpC,OAAIzC,EAEAzM,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,MAAIC,UAAU,iBAAgB,0BAC9BF,IAAAC,cAAA,OAAKC,UAAU,8BACbF,IAAAC,cAAA,OACEC,UAAU,uBACVtC,MAAO,CAAE1G,SAAU2V,SAGvB7M,IAAAC,cAAA,KAAGC,UAAU,gBAAe,mBAAiB2M,EAAgB,KAC7D7M,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,OAAKC,UAAU,aACfF,IAAAC,cAAA,OAAKC,UAAU,iBAQvByM,EAEA3M,IAAAC,cAAA,OAAKC,UAAU,SACbF,IAAAC,cAAA,UAAI,sBACJD,IAAAC,cAAA,SAAI0M,GACJ3M,IAAAC,cAAA,UAAQyK,QAASA,IAAMhT,OAAOyX,SAASC,UAAU,cAMrDpP,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,cACED,IAAAC,cAAA,UAAI,0BACJD,IAAAC,cAAA,SAAG,yHAEHD,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIC,UAAyB,aAAdmN,EAA2B,SAAW,IACnDrN,IAAAC,cAAA,UAAQyK,QAASA,IAAM4C,EAAa,aAAa,aAEnDtN,IAAAC,cAAA,MAAIC,UAAyB,aAAdmN,EAA2B,SAAW,IACnDrN,IAAAC,cAAA,UAAQyK,QAASA,IAAM4C,EAAa,aAAa,aAEnDtN,IAAAC,cAAA,MAAIC,UAAyB,SAAdmN,EAAuB,SAAW,IAC/CrN,IAAAC,cAAA,UAAQyK,QAASA,IAAM4C,EAAa,SAAS,YAMrDtN,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,cAAc1J,EAAQuF,OAAO+B,kBAC5CkC,IAAAC,cAAA,OAAKC,UAAU,cAAa,oBAE9BF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,cAAc6O,EAAgBhT,OAAO+B,kBACpDkC,IAAAC,cAAA,OAAKC,UAAU,cAAa,uBAE9BF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,cAAczJ,EAAiBsF,OAAO+B,kBACrDkC,IAAAC,cAAA,OAAKC,UAAU,cAAa,mBAE9BF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,cAAcxJ,EAAmBqF,OAAO+B,kBACvDkC,IAAAC,cAAA,OAAKC,UAAU,cAAa,wBAIhCF,IAAAC,cAAC2I,EAAY,CACXvI,UAAWA,EACXwI,kBAAmBkE,EACnBjE,eAAgBA,EAChBC,iBAAkBiE,EAClBhE,UAAWA,EACXC,eAAgBA,EAChBC,iBAAkB+D,EAClB9D,UAAWA,EACXC,kBAAmBA,EACnBC,sBAAuBA,IAAM6D,GAAsB9D,GACnDE,oBAAqBA,EACrBC,wBAAyBA,IAAM4D,GAAwB7D,GACvDE,SAAUA,EACVC,iBAAkB2D,IAGL,aAAdC,GACCrN,IAAAC,cAAA,YACED,IAAAC,cAAA,WAASC,UAAU,sBACjBF,IAAAC,cAAA,OAAKC,UAAU,wBACbF,IAAAC,cAAA,UAAI,2BACJD,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,UACEC,UAAwB,QAAbsJ,EAAqB,SAAW,GAC3CkB,QAASA,IAAM0C,EAAY,QAC5B,YAGDpN,IAAAC,cAAA,UACEC,UAAwB,YAAbsJ,EAAyB,SAAW,GAC/CkB,QAASA,IAAM0C,EAAY,YAC5B,YAGDpN,IAAAC,cAAA,UACEC,UAAwB,aAAbsJ,EAA0B,SAAW,GAChDkB,QAASA,IAAM0C,EAAY,aAC5B,cAKLpN,IAAAC,cAAC3J,EAAgB,CACfE,QAASuY,EACTtY,iBAAkB2S,EAAoB3S,EAAmB,GACzDC,mBAAoB4S,EAAsB5S,EAAqB,GAC/DC,UAAWA,EACX6S,SAAUA,KAIdxJ,IAAAC,cAAA,WAASC,UAAU,qBACjBF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAACG,EAAa,CACZ5J,QAASA,EACT6J,UAAWA,EACXwI,kBAAmBkE,KAGvB/M,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,UAAI,2BACJD,IAAAC,cAAA,SAAG,+TAOPD,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAC2F,EAAiB,CAChBpP,QAASA,EACTsS,eAAgBA,EAChBC,iBAAkBiE,KAGtBhN,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,UAAI,2BACJD,IAAAC,cAAA,SAAG,sRAMPD,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,OAAKC,UAAU,2BACbF,IAAAC,cAACmG,EAAwB,CACvB5P,QAASuY,EACTrY,mBAAoBA,KAGxBsJ,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,UAAI,8BACJD,IAAAC,cAAA,SAAG,0XAUE,aAAdoN,GACCrN,IAAAC,cAAA,YACED,IAAAC,cAAA,WAASC,UAAU,oBACjBF,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,SAAG,kPAGHD,IAAAC,cAAA,OAAKC,UAAU,2BAEbF,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,YAAM,+BAMdD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAI,sBACJD,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,SAAG,sPAGHD,IAAAC,cAAA,OAAKC,UAAU,wBAEbF,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,YAAM,gCAMdD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAI,2BACJD,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,SAAG,iQAGHD,IAAAC,cAAA,OAAKC,UAAU,SACbF,IAAAC,cAACwH,EAAiB,CAChBjR,QAASuY,EACTrH,aAAcjR,EACdkR,aAAa,gBAMrB3H,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAI,0BACJD,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,SAAG,kPAGHD,IAAAC,cAAA,OAAKC,UAAU,6BAEbF,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,YAAM,uCAUP,SAAdoN,GACCrN,IAAAC,cAAA,YACED,IAAAC,cAAA,WAASC,UAAU,gBACjBF,IAAAC,cAAA,UAAI,iBACJD,IAAAC,cAAA,OAAKC,UAAU,wBACbF,IAAAC,cAAA,SAAOC,UAAU,cACfF,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,UAAI,iBAGRD,IAAAC,cAAA,aACG8O,EAAgBvS,MAAM,EAAG,KAAKC,IAAI,CAAC6J,EAAU6D,IAC5CnK,IAAAC,cAAA,MAAIiL,IAAKf,GACPnK,IAAAC,cAAA,UAAKqG,EAASlI,MAAQkI,EAASjI,UAAY,WAC3C2B,IAAAC,cAAA,UAAKqG,EAAShI,MAAQ,WACtB0B,IAAAC,cAAA,UAAKqG,EAASrK,OAAS,WACvB+D,IAAAC,cAAA,UAAKqG,EAAS/H,OAAS,WACvByB,IAAAC,cAAA,UAAKqG,EAAS9H,UAAY,OAC1BwB,IAAAC,cAAA,MAAIC,UAAU,oBAAoBoG,EAAS+I,aAAe,gCAKjEN,EAAgBhT,OAAS,KACxBiE,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,SAAG,kBAAgB8O,EAAgBhT,OAAO+B,iBAAiB,YAC3DkC,IAAAC,cAAA,UAAQC,UAAU,qBAAoB,iBAQlDF,IAAAC,cAAA,cACED,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,sBACJD,IAAAC,cAAA,SAAG,yIAELD,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,iCACJD,IAAAC,cAAA,UAAI,gDACJD,IAAAC,cAAA,UAAI,sCAGRD,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,SAAG,2IAGPD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,SAAG,SAAQ,IAAI6L,MAAOC,cAAc,0DClZ/BuD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAA5E,EAAA,GAAA6E,KAAAD,EAAAE,KAAA,WAAqBD,KAAKnZ,IAAiD,IAAhDqZ,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASzZ,EACpEqZ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrQ,IAAAC,cAACD,IAAMsQ,WAAU,KACftQ,IAAAC,cAACmM,EAAG,QAORkD","file":"static/js/main.1bd5ead3.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as topojson from 'topojson-client';\r\nimport '../styles/components/MapVisualization.css';\r\n\r\nconst MapVisualization = ({ ufoData, militaryBaseData, nuclearReactorData, usMapData }) => {\r\n  const svgRef = useRef();\r\n  const tooltipRef = useRef();\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n  \r\n  // Handle window resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const containerWidth = svgRef.current.parentElement.clientWidth;\r\n      setDimensions({\r\n        width: containerWidth,\r\n        height: containerWidth * 0.6, // Maintain aspect ratio\r\n      });\r\n    };\r\n    \r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  \r\n  // Draw map when data or dimensions change\r\n  useEffect(() => {\r\n    if (!usMapData || !dimensions.width || !dimensions.height) return;\r\n    \r\n    const svg = d3.select(svgRef.current);\r\n    const tooltip = d3.select(tooltipRef.current);\r\n    \r\n    // Clear previous rendering\r\n    svg.selectAll('*').remove();\r\n    \r\n    svg\r\n      .attr('width', dimensions.width)\r\n      .attr('height', dimensions.height)\r\n      .attr('viewBox', [0, 0, dimensions.width, dimensions.height])\r\n      .attr('style', 'max-width: 100%; height: auto;');\r\n    \r\n    // Create projection\r\n    const projection = d3.geoAlbersUsa()\r\n      .fitSize([dimensions.width, dimensions.height], topojson.feature(usMapData, usMapData.objects.states));\r\n    \r\n    // Create path generator\r\n    const path = d3.geoPath().projection(projection);\r\n    \r\n    // Map of state names to abbreviations\r\n    const stateNameToAbbr = {\r\n      'Alabama': 'AL', 'Alaska': 'AK', 'Arizona': 'AZ', 'Arkansas': 'AR', 'California': 'CA',\r\n      'Colorado': 'CO', 'Connecticut': 'CT', 'Delaware': 'DE', 'Florida': 'FL', 'Georgia': 'GA',\r\n      'Hawaii': 'HI', 'Idaho': 'ID', 'Illinois': 'IL', 'Indiana': 'IN', 'Iowa': 'IA',\r\n      'Kansas': 'KS', 'Kentucky': 'KY', 'Louisiana': 'LA', 'Maine': 'ME', 'Maryland': 'MD',\r\n      'Massachusetts': 'MA', 'Michigan': 'MI', 'Minnesota': 'MN', 'Mississippi': 'MS', 'Missouri': 'MO',\r\n      'Montana': 'MT', 'Nebraska': 'NE', 'Nevada': 'NV', 'New Hampshire': 'NH', 'New Jersey': 'NJ',\r\n      'New Mexico': 'NM', 'New York': 'NY', 'North Carolina': 'NC', 'North Dakota': 'ND', 'Ohio': 'OH',\r\n      'Oklahoma': 'OK', 'Oregon': 'OR', 'Pennsylvania': 'PA', 'Rhode Island': 'RI', 'South Carolina': 'SC',\r\n      'South Dakota': 'SD', 'Tennessee': 'TN', 'Texas': 'TX', 'Utah': 'UT', 'Vermont': 'VT',\r\n      'Virginia': 'VA', 'Washington': 'WA', 'West Virginia': 'WV', 'Wisconsin': 'WI', 'Wyoming': 'WY',\r\n      'District of Columbia': 'DC'\r\n    };\r\n    \r\n    // Group data by state to count sightings per state\r\n    const sightingsByState = d3.rollup(\r\n      ufoData,\r\n      v => v.length,\r\n      d => d.state ? d.state.toUpperCase() : \"Unknown\"\r\n    );\r\n    \r\n    // Log state codes for debugging\r\n    console.log(\"State codes in UFO data:\", Array.from(sightingsByState.keys()));\r\n    console.log(\"First few UFO state values:\", ufoData.slice(0, 5).map(d => d.state));\r\n    \r\n    // Create color scale for states\r\n    const colorScale = d3.scaleSequential(d3.interpolateBlues)\r\n      .domain([0, d3.max(Array.from(sightingsByState.values())) || 1]);\r\n    \r\n    // Draw states with color coding\r\n    const states = svg.append('g')\r\n      .selectAll('path')\r\n      .data(topojson.feature(usMapData, usMapData.objects.states).features)\r\n      .join('path')\r\n      .attr('fill', d => {\r\n        // Try different state code formats to match with UFO data\r\n        const stateName = d.properties.name;\r\n        const stateAbbr = stateNameToAbbr[stateName];\r\n        \r\n        // Try to find sightings count using state abbreviation\r\n        let count = 0;\r\n        if (stateAbbr && sightingsByState.has(stateAbbr)) {\r\n          count = sightingsByState.get(stateAbbr);\r\n        } else if (stateAbbr && sightingsByState.has(stateAbbr.toLowerCase())) {\r\n          count = sightingsByState.get(stateAbbr.toLowerCase());\r\n        }\r\n        \r\n        // Return color based on count\r\n        return colorScale(count);\r\n      })\r\n      .attr('stroke', '#999')\r\n      .attr('stroke-width', 0.5)\r\n      .attr('d', path)\r\n      .attr('class', 'state')\r\n      .on('mouseover', function(event, d) {\r\n        const stateName = d.properties.name;\r\n        const stateAbbr = stateNameToAbbr[stateName];\r\n        \r\n        // Try to find the correct count by trying different state code formats\r\n        let count = 0;\r\n        if (stateAbbr && sightingsByState.has(stateAbbr)) {\r\n          count = sightingsByState.get(stateAbbr);\r\n        } else if (stateAbbr && sightingsByState.has(stateAbbr.toLowerCase())) {\r\n          count = sightingsByState.get(stateAbbr.toLowerCase());\r\n        } else if (stateName && sightingsByState.has(stateName)) {\r\n          count = sightingsByState.get(stateName);\r\n        }\r\n        \r\n        d3.select(this)\r\n          .attr('stroke', '#333')\r\n          .attr('stroke-width', 1.5);\r\n          \r\n        tooltip\r\n          .style('opacity', 1)\r\n          .html(`<strong>${stateName}</strong><br>${count.toLocaleString()} UFO sightings`)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mousemove', function(event) {\r\n        tooltip\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mouseout', function() {\r\n        d3.select(this)\r\n          .attr('stroke', '#999')\r\n          .attr('stroke-width', 0.5);\r\n          \r\n        tooltip.style('opacity', 0);\r\n      });\r\n    \r\n    // Add UFO sightings\r\n    svg.append('g')\r\n      .selectAll('circle')\r\n      .data(ufoData)\r\n      .join('circle')\r\n      .attr('cx', d => {\r\n        const coords = projection([d.longitude, d.latitude]);\r\n        if (!coords) return null; // Skip this point if projection returns null\r\n        return coords[0];\r\n      })\r\n      .attr('cy', d => {\r\n        const coords = projection([d.longitude, d.latitude]);\r\n        if (!coords) return null; // Skip this point if projection returns null\r\n        return coords[1];\r\n      })\r\n      .attr('r', 3)\r\n      .attr('fill', 'rgba(255, 215, 0, 0.6)')  // Gold color with transparency\r\n      .attr('stroke', 'rgba(255, 215, 0, 0.9)')\r\n      .attr('stroke-width', 1)\r\n      .attr('class', 'ufo-sighting')\r\n      .on('mouseover', function(event, d) {\r\n        d3.select(this)\r\n          .attr('r', 6)\r\n          .attr('fill', 'rgba(255, 215, 0, 0.9)');\r\n        \r\n        tooltip\r\n          .style('opacity', 1)\r\n          .html(`\r\n            <strong>UFO Sighting</strong><br>\r\n            Date: ${d.date || d.datetime || 'Unknown'}<br>\r\n            Location: ${d.city || 'Unknown'}, ${d.state || 'Unknown'}<br>\r\n            Shape: ${d.shape || 'Unknown'}<br>\r\n            Duration: ${d.duration || 'N/A'}\r\n          `)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mouseout', function() {\r\n        d3.select(this)\r\n          .attr('r', 3)\r\n          .attr('fill', 'rgba(255, 215, 0, 0.6)');\r\n          \r\n        tooltip.style('opacity', 0);\r\n      });\r\n    \r\n    // Add military bases\r\n    if (militaryBaseData.length > 0) {\r\n      svg.append('g')\r\n        .selectAll('path')\r\n        .data(militaryBaseData)\r\n        .join('path')\r\n        .attr('transform', d => {\r\n          const coords = projection([d.longitude, d.latitude]);\r\n          if (!coords) return null; // Skip this point if projection returns null\r\n          return `translate(${coords[0]}, ${coords[1]})`;\r\n        })\r\n        .attr('d', 'M-5,-5 L0,-10 L5,-5 L5,5 L-5,5 Z') // Pentagon shape for military bases\r\n        .attr('fill', 'rgba(220, 20, 60, 0.7)') // Crimson color with transparency\r\n        .attr('stroke', 'rgba(220, 20, 60, 0.9)')\r\n        .attr('stroke-width', 1)\r\n        .attr('class', 'military-base')\r\n        .on('mouseover', function(event, d) {\r\n          d3.select(this)\r\n            .attr('fill', 'rgba(220, 20, 60, 0.9)');\r\n            \r\n          tooltip\r\n            .style('opacity', 1)\r\n            .html(`\r\n              <strong>Military Base</strong><br>\r\n              Name: ${d.name || 'Unknown'}<br>\r\n              Type: ${d.type || 'N/A'}<br>\r\n              Branch: ${d.branch || 'N/A'}\r\n            `)\r\n            .style('left', (event.pageX + 10) + 'px')\r\n            .style('top', (event.pageY - 28) + 'px');\r\n        })\r\n        .on('mouseout', function() {\r\n          d3.select(this)\r\n            .attr('fill', 'rgba(220, 20, 60, 0.7)');\r\n            \r\n          tooltip.style('opacity', 0);\r\n        });\r\n    }\r\n    \r\n    // Add nuclear reactors\r\n    if (nuclearReactorData.length > 0) {\r\n        svg.append('g')\r\n        .selectAll('circle')\r\n        .data(nuclearReactorData)\r\n        .join('circle')\r\n        .attr('cx', d => {\r\n            const coords = projection([d.longitude, d.latitude]);\r\n            if (!coords) return null; // Skip this point if projection returns null\r\n            return coords[0];\r\n        })\r\n        .attr('cy', d => {\r\n            const coords = projection([d.longitude, d.latitude]);\r\n            if (!coords) return null; // Skip this point if projection returns null\r\n            return coords[1];\r\n        })\r\n        .attr('r', 6)\r\n        .attr('fill', 'rgba(50, 205, 50, 0.7)') // Green color for nuclear reactors\r\n        .attr('stroke', 'rgba(0, 100, 0, 0.9)')\r\n        .attr('stroke-width', 1.5)\r\n        .attr('class', 'nuclear-reactor')\r\n        .on('mouseover', function(event, d) {\r\n            d3.select(this)\r\n            .attr('r', 9)\r\n            .attr('fill', 'rgba(50, 205, 50, 0.9)');\r\n            \r\n            tooltip\r\n            .style('opacity', 1)\r\n            .html(`\r\n                <strong>Nuclear Facility</strong><br>\r\n                Name: ${d.name || 'Unknown'}<br>\r\n                State: ${d.state || 'N/A'}<br>\r\n                Type: ${d.type || 'Nuclear Facility'}\r\n            `)\r\n            .style('left', (event.pageX + 10) + 'px')\r\n            .style('top', (event.pageY - 28) + 'px');\r\n        })\r\n        .on('mouseout', function() {\r\n            d3.select(this)\r\n            .attr('r', 6)\r\n            .attr('fill', 'rgba(50, 205, 50, 0.7)');\r\n            \r\n            tooltip.style('opacity', 0);\r\n        });\r\n    }\r\n\r\n    // Add circular buffers around nuclear reactors (50km radius)\r\n    if (nuclearReactorData.length > 0) {\r\n        const bufferRadius = 50; // km\r\n        const earthRadius = 6371; // km\r\n        \r\n        nuclearReactorData.forEach(reactor => {\r\n        // Convert buffer radius from km to degrees (approximate)\r\n        const bufferRadiusDegrees = (bufferRadius / earthRadius) * (180 / Math.PI);\r\n        \r\n        // Draw circle\r\n        const circle = d3.geoCircle()\r\n            .center([reactor.longitude, reactor.latitude])\r\n            .radius(bufferRadiusDegrees);\r\n        \r\n        svg.append('path')\r\n            .datum(circle())\r\n            .attr('d', path)\r\n            .attr('fill', 'rgba(50, 205, 50, 0.1)')\r\n            .attr('stroke', 'rgba(50, 205, 50, 0.4)')\r\n            .attr('stroke-width', 1)\r\n            .attr('stroke-dasharray', '5,5')\r\n            .attr('class', 'reactor-buffer');\r\n        });\r\n    }\r\n    \r\n    // Add color legend for states\r\n    const legendWidth = 200;\r\n    const legendHeight = 15;\r\n    const legendX = dimensions.width - legendWidth - 20;\r\n    const legendY = dimensions.height - 40;\r\n\r\n    const legendScale = d3.scaleLinear()\r\n      .domain([0, d3.max(Array.from(sightingsByState.values()))])\r\n      .range([0, legendWidth]);\r\n      \r\n    const legendAxis = d3.axisBottom(legendScale)\r\n      .ticks(5)\r\n      .tickFormat(d3.format(\",.0f\"));\r\n\r\n    // Create gradient for legend\r\n    const defs = svg.append('defs');\r\n    const gradient = defs.append('linearGradient')\r\n      .attr('id', 'sightings-gradient')\r\n      .attr('x1', '0%')\r\n      .attr('y1', '0%')\r\n      .attr('x2', '100%')\r\n      .attr('y2', '0%');\r\n\r\n    gradient.selectAll('stop')\r\n      .data([0, 0.2, 0.4, 0.6, 0.8, 1])\r\n      .join('stop')\r\n      .attr('offset', d => d * 100 + '%')\r\n      .attr('stop-color', d => colorScale(d * d3.max(Array.from(sightingsByState.values()))));\r\n\r\n    // Add legend rectangle with gradient\r\n    svg.append('rect')\r\n      .attr('x', legendX)\r\n      .attr('y', legendY)\r\n      .attr('width', legendWidth)\r\n      .attr('height', legendHeight)\r\n      .style('fill', 'url(#sightings-gradient)');\r\n\r\n    // Add legend axis\r\n    svg.append('g')\r\n      .attr('transform', `translate(${legendX}, ${legendY + legendHeight})`)\r\n      .call(legendAxis)\r\n      .attr('font-size', '10px');\r\n\r\n    // Add legend title\r\n    svg.append('text')\r\n      .attr('x', legendX)\r\n      .attr('y', legendY - 5)\r\n      .attr('font-size', '12px')\r\n      .text('UFO Sightings by State');\r\n    \r\n    // Add main legend with UFO and military base symbols\r\n    const mainLegend = svg.append('g')\r\n      .attr('transform', `translate(20, ${dimensions.height - 80})`);\r\n    \r\n      \r\n    // UFO sightings legend\r\n    mainLegend.append('circle')\r\n      .attr('cx', 10)\r\n      .attr('cy', 10)\r\n      .attr('r', 5)\r\n      .attr('fill', 'rgba(255, 215, 0, 0.6)')  \r\n      .attr('stroke', 'rgba(255, 215, 0, 0.9)')\r\n      .attr('stroke-width', 1);\r\n      \r\n    mainLegend.append('text')\r\n      .attr('x', 25)\r\n      .attr('y', 15)\r\n      .text('UFO Sighting')\r\n      .attr('font-size', '12px');\r\n       \r\n    // Military base legend  \r\n    mainLegend.append('path')\r\n      .attr('transform', 'translate(10, 40)')\r\n      .attr('d', 'M-4,-4 L0,-8 L4,-4 L4,4 L-4,4 Z')\r\n      .attr('fill', 'rgba(220, 20, 60, 0.7)')\r\n      .attr('stroke', 'rgba(220, 20, 60, 0.9)')\r\n      .attr('stroke-width', 1);\r\n      \r\n    mainLegend.append('text')\r\n      .attr('x', 25)\r\n      .attr('y', 45)\r\n      .text('Military Base')\r\n      .attr('font-size', '12px');\r\n    \r\n    // Nuclear reactor legend\r\n    mainLegend.append('circle')\r\n      .attr('cx', 10)\r\n      .attr('cy', 70) // Position below military base entry\r\n      .attr('r', 6)\r\n      .attr('fill', 'rgba(50, 205, 50, 0.7)')\r\n      .attr('stroke', 'rgba(0, 100, 0, 0.9)')\r\n      .attr('stroke-width', 1.5);\r\n    \r\n    mainLegend.append('text')\r\n      .attr('x', 25)\r\n      .attr('y', 75) // Position below military base entry\r\n      .text('Nuclear Reactor')\r\n      .attr('font-size', '12px');\r\n\r\n  }, [usMapData, ufoData, militaryBaseData, nuclearReactorData, dimensions]);\r\n  \r\n  return (\r\n    <div className=\"map-container\">\r\n      <svg ref={svgRef}></svg>\r\n      <div className=\"tooltip\" ref={tooltipRef}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapVisualization;","import React, { useRef, useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport '../styles/components/TimelineChart.css';\r\n\r\nconst TimelineChart = ({ ufoData, yearRange }) => {\r\n  const svgRef = useRef();\r\n  const tooltipRef = useRef();\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n  \r\n  // Handle window resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const containerWidth = svgRef.current.parentElement.clientWidth;\r\n      setDimensions({\r\n        width: containerWidth,\r\n        height: 300, // Fixed height\r\n      });\r\n    };\r\n    \r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  \r\n  // Draw timeline chart\r\n  useEffect(() => {\r\n    if (!ufoData.length || !dimensions.width || !dimensions.height) return;\r\n    \r\n    const svg = d3.select(svgRef.current);\r\n    const tooltip = d3.select(tooltipRef.current);\r\n    \r\n    // Clear previous rendering\r\n    svg.selectAll('*').remove();\r\n    \r\n    svg\r\n      .attr('width', dimensions.width)\r\n      .attr('height', dimensions.height)\r\n      .attr('viewBox', [0, 0, dimensions.width, dimensions.height])\r\n      .attr('style', 'max-width: 100%; height: auto;');\r\n    \r\n    // Add title\r\n    svg.append('text')\r\n      .attr('x', dimensions.width / 2)\r\n      .attr('y', 20)\r\n      .attr('text-anchor', 'middle')\r\n      .style('font-size', '16px')\r\n      .style('font-weight', 'bold')\r\n      .text('UFO Sightings Over Time');\r\n    \r\n    // Set margins\r\n    const margin = { top: 40, right: 30, bottom: 60, left: 60 };\r\n    const innerWidth = dimensions.width - margin.left - margin.right;\r\n    const innerHeight = dimensions.height - margin.top - margin.bottom;\r\n    \r\n    // Aggregate data by year\r\n    const yearCounts = d3.rollup(\r\n      ufoData,\r\n      v => v.length,\r\n      d => d.year\r\n    );\r\n    \r\n    // Convert to array for line chart\r\n    const yearData = Array.from(yearCounts, ([year, count]) => ({ year, count }))\r\n      .sort((a, b) => a.year - b.year);\r\n    \r\n    // Create scales\r\n    const xScale = d3.scaleLinear()\r\n      .domain([d3.min(yearData, d => d.year), d3.max(yearData, d => d.year)])\r\n      .range([0, innerWidth]);\r\n    \r\n    const yScale = d3.scaleLinear()\r\n      .domain([0, d3.max(yearData, d => d.count) * 1.1]) // Add 10% padding\r\n      .range([innerHeight, 0]);\r\n    \r\n    // Create main group\r\n    const g = svg.append('g')\r\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n    \r\n    // Add axes\r\n    const xAxis = d3.axisBottom(xScale)\r\n      .ticks(10)\r\n      .tickFormat(d => d);\r\n    \r\n    g.append('g')\r\n      .attr('transform', `translate(0, ${innerHeight})`)\r\n      .call(xAxis);\r\n    \r\n    const yAxis = d3.axisLeft(yScale)\r\n      .ticks(10);\r\n    \r\n    g.append('g')\r\n      .call(yAxis);\r\n    \r\n    // Add axis labels\r\n    g.append('text')\r\n      .attr('transform', `translate(${innerWidth / 2}, ${innerHeight + 40})`)\r\n      .style('text-anchor', 'middle')\r\n      .text('Year');\r\n    \r\n    g.append('text')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('y', -40)\r\n      .attr('x', -innerHeight / 2)\r\n      .style('text-anchor', 'middle')\r\n      .text('Number of Sightings');\r\n    \r\n    // Create line generator\r\n    const line = d3.line()\r\n      .x(d => xScale(d.year))\r\n      .y(d => yScale(d.count))\r\n      .curve(d3.curveMonotoneX);\r\n    \r\n    // Add the line\r\n    g.append('path')\r\n      .datum(yearData)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', 'steelblue')\r\n      .attr('stroke-width', 2)\r\n      .attr('d', line);\r\n    \r\n    // Add dots for each data point\r\n    g.selectAll('.dot')\r\n      .data(yearData)\r\n      .join('circle')\r\n      .attr('class', 'dot')\r\n      .attr('cx', d => xScale(d.year))\r\n      .attr('cy', d => yScale(d.count))\r\n      .attr('r', 4)\r\n      .attr('fill', 'steelblue')\r\n      .on('mouseover', (event, d) => {\r\n        tooltip\r\n          .style('opacity', 1)\r\n          .html(`<strong>${d.year}</strong>: ${d.count} sightings`)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mouseout', () => {\r\n        tooltip.style('opacity', 0);\r\n      });\r\n    \r\n  }, [ufoData, dimensions]);\r\n  \r\n  return (\r\n    <div className=\"timeline-container\">\r\n      <svg ref={svgRef}></svg>\r\n      <div className=\"tooltip\" ref={tooltipRef}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimelineChart;","import React, { useRef, useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport '../styles/components/StateRankingChart.css';\r\n\r\n// Add this state abbreviation to full name mapping\r\nconst stateNameMap = {\r\n  'AL': 'Alabama',\r\n  'AK': 'Alaska',\r\n  'AZ': 'Arizona',\r\n  'AR': 'Arkansas',\r\n  'CA': 'California',\r\n  'CO': 'Colorado',\r\n  'CT': 'Connecticut',\r\n  'DE': 'Delaware',\r\n  'FL': 'Florida',\r\n  'GA': 'Georgia',\r\n  'HI': 'Hawaii',\r\n  'ID': 'Idaho',\r\n  'IL': 'Illinois',\r\n  'IN': 'Indiana',\r\n  'IA': 'Iowa',\r\n  'KS': 'Kansas',\r\n  'KY': 'Kentucky',\r\n  'LA': 'Louisiana',\r\n  'ME': 'Maine',\r\n  'MD': 'Maryland',\r\n  'MA': 'Massachusetts',\r\n  'MI': 'Michigan',\r\n  'MN': 'Minnesota',\r\n  'MS': 'Mississippi',\r\n  'MO': 'Missouri',\r\n  'MT': 'Montana',\r\n  'NE': 'Nebraska',\r\n  'NV': 'Nevada',\r\n  'NH': 'New Hampshire',\r\n  'NJ': 'New Jersey',\r\n  'NM': 'New Mexico',\r\n  'NY': 'New York',\r\n  'NC': 'North Carolina',\r\n  'ND': 'North Dakota',\r\n  'OH': 'Ohio',\r\n  'OK': 'Oklahoma',\r\n  'OR': 'Oregon',\r\n  'PA': 'Pennsylvania',\r\n  'RI': 'Rhode Island',\r\n  'SC': 'South Carolina',\r\n  'SD': 'South Dakota',\r\n  'TN': 'Tennessee',\r\n  'TX': 'Texas',\r\n  'UT': 'Utah',\r\n  'VT': 'Vermont',\r\n  'VA': 'Virginia',\r\n  'WA': 'Washington',\r\n  'WV': 'West Virginia',\r\n  'WI': 'Wisconsin',\r\n  'WY': 'Wyoming',\r\n  'DC': 'District of Columbia',\r\n  // Add potential missing territories/regions\r\n  'PR': 'Puerto Rico',\r\n  'GU': 'Guam',\r\n  'VI': 'Virgin Islands',\r\n  'AS': 'American Samoa',\r\n  'MP': 'Northern Mariana Islands',\r\n  // Canadian provinces that might be in the data\r\n  'BC': 'British Columbia',\r\n  'ON': 'Ontario',\r\n  'QC': 'Quebec',\r\n  'AB': 'Alberta',\r\n  // Add common variations or potential miscodings\r\n  'Wa': 'Washington',\r\n  'Ca': 'California',\r\n  'Tx': 'Texas',\r\n  'Fl': 'Florida',\r\n  'Ny': 'New York',\r\n  '': 'Unknown Location'\r\n};\r\n\r\nconst StateRankingChart = ({ ufoData }) => {\r\n  const svgRef = useRef();\r\n  const tooltipRef = useRef();\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n  \r\n  // Handle window resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const containerWidth = svgRef.current.parentElement.clientWidth;\r\n      setDimensions({\r\n        width: containerWidth,\r\n        height: 400, // Fixed height\r\n      });\r\n    };\r\n    \r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  \r\n  // Draw bar chart\r\n  useEffect(() => {\r\n    if (!ufoData.length || !dimensions.width || !dimensions.height) return;\r\n    \r\n    const svg = d3.select(svgRef.current);\r\n    const tooltip = d3.select(tooltipRef.current);\r\n    \r\n    // Clear previous rendering\r\n    svg.selectAll('*').remove();\r\n    \r\n    svg\r\n      .attr('width', dimensions.width)\r\n      .attr('height', dimensions.height)\r\n      .attr('viewBox', [0, 0, dimensions.width, dimensions.height])\r\n      .attr('style', 'max-width: 100%; height: auto;');\r\n    \r\n    // Add title\r\n    svg.append('text')\r\n      .attr('x', dimensions.width / 2)\r\n      .attr('y', 20)\r\n      .attr('text-anchor', 'middle')\r\n      .style('font-size', '16px')\r\n      .style('font-weight', 'bold')\r\n      .text('Top 10 States by UFO Sightings');\r\n    \r\n    // Set margins\r\n    const margin = { top: 40, right: 30, bottom: 60, left: 120 }; // Increased left margin for longer state names\r\n    const innerWidth = dimensions.width - margin.left - margin.right;\r\n    const innerHeight = dimensions.height - margin.top - margin.bottom;\r\n    \r\n    // Group data by state\r\n    const stateCounts = d3.rollup(\r\n      ufoData,\r\n      v => v.length,\r\n      d => d.state\r\n    );\r\n    \r\n    // Log state codes to debug\r\n    console.log(\"State codes in data for ranking chart:\", Array.from(stateCounts.keys()));\r\n    \r\n    // Convert to array and sort by count descending\r\n    const stateData = Array.from(stateCounts, ([state, count]) => {\r\n      // Ensure state code is uppercase for proper mapping\r\n      const stateCode = state ? state.toUpperCase() : state;\r\n      \r\n      // Log each state code to identify the missing one\r\n      console.log(\"Processing state:\", state, \"count:\", count);\r\n      \r\n      // Add fallback for the unnamed state\r\n      let stateName = stateNameMap[stateCode];\r\n      if (!stateName) {\r\n        console.warn(\"Could not find state name for code:\", stateCode);\r\n        stateName = stateCode || \"Unknown State\";\r\n      }\r\n      \r\n      return {\r\n        state: stateCode,\r\n        stateName: stateName, \r\n        count\r\n      };\r\n    })\r\n      .sort((a, b) => b.count - a.count)\r\n      .slice(0, 10); // Get top 10\r\n    \r\n    console.log(\"Final top 10 states data:\", stateData);\r\n    \r\n    // Create scales\r\n    const xScale = d3.scaleLinear()\r\n      .domain([0, d3.max(stateData, d => d.count) * 1.1])\r\n      .range([0, innerWidth]);\r\n    \r\n    const yScale = d3.scaleBand()\r\n      .domain(stateData.map(d => d.stateName)) // Use the full state name\r\n      .range([0, innerHeight])\r\n      .padding(0.2);\r\n    \r\n    // Create main group\r\n    const g = svg.append('g')\r\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n    \r\n    // Add axes\r\n    const xAxis = d3.axisBottom(xScale)\r\n      .ticks(6)\r\n      .tickFormat(d3.format(',d')); // Format numbers with commas\r\n    \r\n    g.append('g')\r\n      .attr('transform', `translate(0, ${innerHeight})`)\r\n      .call(xAxis);\r\n    \r\n    const yAxis = d3.axisLeft(yScale);\r\n    \r\n    g.append('g')\r\n      .call(yAxis);\r\n    \r\n    // Add axis labels\r\n    g.append('text')\r\n      .attr('transform', `translate(${innerWidth / 2}, ${innerHeight + 40})`)\r\n      .style('text-anchor', 'middle')\r\n      .text('Number of Sightings');\r\n    \r\n    // Add bars\r\n    g.selectAll('.bar')\r\n      .data(stateData)\r\n      .join('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', 0)\r\n      .attr('y', d => yScale(d.stateName))\r\n      .attr('width', d => xScale(d.count))\r\n      .attr('height', yScale.bandwidth())\r\n      .attr('fill', 'steelblue')\r\n      .on('mouseover', (event, d) => {\r\n        // Highlight the bar\r\n        d3.select(event.currentTarget)\r\n          .attr('fill', '#3a7ca5');\r\n        \r\n        tooltip\r\n          .style('opacity', 1)\r\n          .html(`<strong>${d.stateName}</strong>: ${d.count.toLocaleString()} sightings`)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mouseout', (event) => {\r\n        // Restore original bar color\r\n        d3.select(event.currentTarget)\r\n          .attr('fill', 'steelblue');\r\n          \r\n        tooltip.style('opacity', 0);\r\n      });\r\n    \r\n    // Add value labels at the end of each bar\r\n    g.selectAll('.bar-label')\r\n      .data(stateData)\r\n      .join('text')\r\n      .attr('class', 'bar-label')\r\n      .attr('x', d => xScale(d.count) + 5)\r\n      .attr('y', d => yScale(d.stateName) + yScale.bandwidth() / 2 + 5)\r\n      .attr('font-size', '12px')\r\n      .text(d => d.count.toLocaleString());\r\n    \r\n  }, [ufoData, dimensions]);\r\n  \r\n  return (\r\n    <div className=\"state-ranking-container\">\r\n      <svg ref={svgRef}></svg>\r\n      <div className=\"tooltip\" ref={tooltipRef}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StateRankingChart;","import React, { useRef, useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst NuclearProximityAnalysis = ({ ufoData, nuclearReactorData }) => {\r\n  const svgRef = useRef();\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n  \r\n  // Handle window resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const containerWidth = svgRef.current.parentElement.clientWidth;\r\n      setDimensions({\r\n        width: containerWidth,\r\n        height: 300,\r\n      });\r\n    };\r\n    \r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  \r\n  // Draw proximity analysis chart\r\n  useEffect(() => {\r\n    if (!ufoData.length || !nuclearReactorData.length || !dimensions.width || !dimensions.height) return;\r\n    \r\n    const svg = d3.select(svgRef.current);\r\n    \r\n    // Clear previous rendering\r\n    svg.selectAll('*').remove();\r\n    \r\n    svg\r\n      .attr('width', dimensions.width)\r\n      .attr('height', dimensions.height)\r\n      .attr('viewBox', [0, 0, dimensions.width, dimensions.height])\r\n      .attr('style', 'max-width: 100%; height: auto;');\r\n    \r\n    // Calculate distance from each UFO sighting to the nearest nuclear reactor\r\n    const sightingsWithDistance = ufoData.map(sighting => {\r\n      // Use Haversine formula to calculate distances\r\n      const distances = nuclearReactorData.map(reactor => {\r\n        const R = 6371; // Earth's radius in km\r\n        const dLat = (reactor.latitude - sighting.latitude) * Math.PI / 180;\r\n        const dLon = (reactor.longitude - sighting.longitude) * Math.PI / 180;\r\n        const a = \r\n          Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n          Math.cos(sighting.latitude * Math.PI / 180) * Math.cos(reactor.latitude * Math.PI / 180) * \r\n          Math.sin(dLon/2) * Math.sin(dLon/2);\r\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n        return R * c;\r\n      });\r\n      \r\n      return {\r\n        ...sighting,\r\n        nearestReactorDistance: Math.min(...distances)\r\n      };\r\n    });\r\n    \r\n    // Group sightings by distance ranges\r\n    const distanceRanges = [10, 25, 50, 100, 200, 500, 1000];\r\n    const distanceCounts = distanceRanges.map(maxDist => {\r\n      const count = sightingsWithDistance.filter(s => s.nearestReactorDistance <= maxDist).length;\r\n      return { \r\n        distance: maxDist, \r\n        count, \r\n        percentage: (count / sightingsWithDistance.length) * 100 \r\n      };\r\n    });\r\n    \r\n    // Set margins\r\n    const margin = { top: 40, right: 30, bottom: 60, left: 60 };\r\n    const innerWidth = dimensions.width - margin.left - margin.right;\r\n    const innerHeight = dimensions.height - margin.top - margin.bottom;\r\n    \r\n    // Set up scales\r\n    const xScale = d3.scaleBand()\r\n      .domain(distanceRanges.map(d => d.toString()))\r\n      .range([0, innerWidth])\r\n      .padding(0.2);\r\n    \r\n    const yScale = d3.scaleLinear()\r\n      .domain([0, d3.max(distanceCounts, d => d.percentage) * 1.1])\r\n      .range([innerHeight, 0]);\r\n    \r\n    // Create main group\r\n    const g = svg.append('g')\r\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n    \r\n    // Add title\r\n    svg.append('text')\r\n      .attr('x', dimensions.width / 2)\r\n      .attr('y', 20)\r\n      .attr('text-anchor', 'middle')\r\n      .style('font-size', '16px')\r\n      .style('font-weight', 'bold')\r\n      .text('UFO Sightings by Distance to Nearest Nuclear Reactor');\r\n    \r\n    // Add axes\r\n    const xAxis = d3.axisBottom(xScale);\r\n    g.append('g')\r\n      .attr('transform', `translate(0, ${innerHeight})`)\r\n      .call(xAxis);\r\n    \r\n    const yAxis = d3.axisLeft(yScale)\r\n      .tickFormat(d => `${d}%`);\r\n    g.append('g')\r\n      .call(yAxis);\r\n    \r\n    // Add axis labels\r\n    g.append('text')\r\n      .attr('transform', `translate(${innerWidth / 2}, ${innerHeight + 40})`)\r\n      .style('text-anchor', 'middle')\r\n      .text('Distance to Nearest Nuclear Reactor (km)');\r\n    \r\n    g.append('text')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('y', -40)\r\n      .attr('x', -innerHeight / 2)\r\n      .style('text-anchor', 'middle')\r\n      .text('Percentage of UFO Sightings');\r\n    \r\n    // Add bars\r\n    g.selectAll('.bar')\r\n      .data(distanceCounts)\r\n      .join('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => xScale(d.distance.toString()))\r\n      .attr('y', d => yScale(d.percentage))\r\n      .attr('width', xScale.bandwidth())\r\n      .attr('height', d => innerHeight - yScale(d.percentage))\r\n      .attr('fill', 'rgba(50, 205, 50, 0.7)')\r\n      .on('mouseover', function(event, d) {\r\n        d3.select(this)\r\n          .attr('fill', 'rgba(50, 205, 50, 0.9)');\r\n          \r\n        const tooltip = d3.select('body').append('div')\r\n          .attr('class', 'tooltip')\r\n          .style('position', 'absolute')\r\n          .style('background', 'rgba(255, 255, 255, 0.9)')\r\n          .style('padding', '10px')\r\n          .style('border', '1px solid #ddd')\r\n          .style('border-radius', '4px')\r\n          .style('pointer-events', 'none')\r\n          .style('opacity', 0);\r\n          \r\n        tooltip\r\n          .style('opacity', 1)\r\n          .html(`\r\n            <strong>Within ${d.distance} km of a nuclear reactor:</strong><br>\r\n            ${d.count.toLocaleString()} UFO sightings (${d.percentage.toFixed(2)}%)\r\n          `)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mouseout', function() {\r\n        d3.select(this)\r\n          .attr('fill', 'rgba(50, 205, 50, 0.7)');\r\n          \r\n        d3.selectAll('.tooltip').remove();\r\n      });\r\n    \r\n    // Add value labels on top of bars\r\n    g.selectAll('.bar-label')\r\n      .data(distanceCounts)\r\n      .join('text')\r\n      .attr('class', 'bar-label')\r\n      .attr('x', d => xScale(d.distance.toString()) + xScale.bandwidth() / 2)\r\n      .attr('y', d => yScale(d.percentage) - 5)\r\n      .attr('text-anchor', 'middle')\r\n      .attr('font-size', '10px')\r\n      .text(d => `${d.percentage.toFixed(1)}%`);\r\n    \r\n  }, [ufoData, nuclearReactorData, dimensions]);\r\n  \r\n  return (\r\n    <div className=\"nuclear-proximity-container\">\r\n      <svg ref={svgRef}></svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NuclearProximityAnalysis;","import React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport '../styles/components/ProximityAnalysis.css';\n\n// Haversine formula to calculate distance between two points on Earth\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // Radius of the Earth in km\n  const dLat = (lat2 - lat1) * Math.PI / 180;\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n    Math.sin(dLon/2) * Math.sin(dLon/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c; // Distance in km\n};\n\nconst ProximityAnalysis = ({ ufoData, facilityData, facilityType }) => {\n  const svgRef = useRef();\n  const tooltipRef = useRef();\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  \n  // Handle window resize\n  useEffect(() => {\n    const handleResize = () => {\n      const containerWidth = svgRef.current.parentElement.clientWidth;\n      setDimensions({\n        width: containerWidth,\n        height: 300, // Fixed height\n      });\n    };\n    \n    handleResize();\n    window.addEventListener('resize', handleResize);\n    \n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  \n  // Analyze proximity data\n  useEffect(() => {\n    if (!ufoData.length || !facilityData.length || !dimensions.width || !dimensions.height) return;\n    \n    const svg = d3.select(svgRef.current);\n    const tooltip = d3.select(tooltipRef.current);\n    \n    // Clear previous rendering\n    svg.selectAll('*').remove();\n    \n    svg\n      .attr('width', dimensions.width)\n      .attr('height', dimensions.height)\n      .attr('viewBox', [0, 0, dimensions.width, dimensions.height])\n      .attr('style', 'max-width: 100%; height: auto;');\n    \n    // Set margins\n    const margin = { top: 40, right: 30, bottom: 60, left: 60 };\n    const innerWidth = dimensions.width - margin.left - margin.right;\n    const innerHeight = dimensions.height - margin.top - margin.bottom;\n    \n    // Define distance thresholds in km\n    const distanceThresholds = [10, 25, 50, 100, 250, 500, 1000];\n    \n    // Calculate distances for each UFO sighting to the nearest facility\n    const proximityData = ufoData.map(sighting => {\n      if (!sighting.latitude || !sighting.longitude) return null;\n      \n      // Find the nearest facility\n      let minDistance = Infinity;\n      let nearestFacility = null;\n      \n      facilityData.forEach(facility => {\n        if (!facility.latitude || !facility.longitude) return;\n        \n        const distance = calculateDistance(\n          sighting.latitude, sighting.longitude,\n          facility.latitude, facility.longitude\n        );\n        \n        if (distance < minDistance) {\n          minDistance = distance;\n          nearestFacility = facility;\n        }\n      });\n      \n      return {\n        sighting,\n        distance: minDistance,\n        facility: nearestFacility\n      };\n    }).filter(item => item !== null);\n    \n    // Count sightings within each distance threshold\n    const thresholdCounts = distanceThresholds.map(threshold => {\n      const count = proximityData.filter(item => item.distance <= threshold).length;\n      const percentage = (count / proximityData.length) * 100;\n      \n      return {\n        threshold,\n        count,\n        percentage\n      };\n    });\n    \n    // Create scales\n    const xScale = d3.scaleBand()\n      .domain(distanceThresholds.map(d => d.toString()))\n      .range([0, innerWidth])\n      .padding(0.2);\n    \n    const yScale = d3.scaleLinear()\n      .domain([0, 100])\n      .range([innerHeight, 0]);\n    \n    // Create main group\n    const g = svg.append('g')\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\n    \n    // Add title\n    svg.append('text')\n      .attr('x', dimensions.width / 2)\n      .attr('y', 20)\n      .attr('text-anchor', 'middle')\n      .style('font-size', '16px')\n      .style('font-weight', 'bold')\n      .text(`UFO Sightings Proximity to ${facilityType === 'military' ? 'Military Bases' : 'Nuclear Facilities'}`);\n    \n    // Add axes\n    const xAxis = d3.axisBottom(xScale)\n      .tickFormat(d => `${d} km`);\n    \n    g.append('g')\n      .attr('transform', `translate(0, ${innerHeight})`)\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'end')\n      .attr('dx', '-.8em')\n      .attr('dy', '.15em')\n      .attr('transform', 'rotate(-45)');\n    \n    const yAxis = d3.axisLeft(yScale)\n      .ticks(10)\n      .tickFormat(d => `${d}%`);\n    \n    g.append('g')\n      .call(yAxis);\n    \n    // Add axis labels\n    g.append('text')\n      .attr('transform', `translate(${innerWidth / 2}, ${innerHeight + 50})`)\n      .style('text-anchor', 'middle')\n      .text('Distance Threshold');\n    \n    g.append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', -40)\n      .attr('x', -innerHeight / 2)\n      .style('text-anchor', 'middle')\n      .text('Percentage of Sightings');\n    \n    // Add bars\n    const barGroups = g.selectAll('.bar-group')\n      .data(thresholdCounts)\n      .join('g')\n      .attr('class', 'bar-group')\n      .attr('transform', d => `translate(${xScale(d.threshold.toString())}, 0)`);\n    \n    const barColor = facilityType === 'military' ? \n      'rgba(220, 20, 60, 0.7)' : // Crimson for military\n      'rgba(255, 165, 0, 0.7)';  // Orange for nuclear\n    \n    barGroups.append('rect')\n      .attr('class', 'bar')\n      .attr('x', 0)\n      .attr('y', d => yScale(d.percentage))\n      .attr('width', xScale.bandwidth())\n      .attr('height', d => innerHeight - yScale(d.percentage))\n      .attr('fill', barColor)\n      .attr('stroke', facilityType === 'military' ? \n        'rgba(220, 20, 60, 0.9)' : \n        'rgba(255, 165, 0, 0.9)')\n      .attr('stroke-width', 1)\n      .on('mouseover', function(event, d) {\n        d3.select(this)\n          .attr('fill', facilityType === 'military' ? \n            'rgba(220, 20, 60, 0.9)' : \n            'rgba(255, 165, 0, 0.9)');\n        \n        tooltip\n          .style('opacity', 1)\n          .html(`\n            <strong>Within ${d.threshold} km:</strong><br>\n            ${d.count.toLocaleString()} sightings<br>\n            ${d.percentage.toFixed(1)}% of total\n          `)\n          .style('left', (event.pageX + 10) + 'px')\n          .style('top', (event.pageY - 28) + 'px');\n      })\n      .on('mouseout', function() {\n        d3.select(this)\n          .attr('fill', barColor);\n        \n        tooltip.style('opacity', 0);\n      });\n    \n    // Add percentage labels on top of bars\n    barGroups.append('text')\n      .attr('class', 'bar-label')\n      .attr('x', xScale.bandwidth() / 2)\n      .attr('y', d => yScale(d.percentage) - 5)\n      .attr('text-anchor', 'middle')\n      .text(d => `${d.percentage.toFixed(1)}%`);\n    \n    // Add a horizontal reference line at 50%\n    g.append('line')\n      .attr('x1', 0)\n      .attr('x2', innerWidth)\n      .attr('y1', yScale(50))\n      .attr('y2', yScale(50))\n      .attr('stroke', 'rgba(255, 255, 255, 0.2)')\n      .attr('stroke-dasharray', '4');\n    \n    g.append('text')\n      .attr('x', innerWidth)\n      .attr('y', yScale(50) - 5)\n      .attr('text-anchor', 'end')\n      .attr('fill', 'rgba(255, 255, 255, 0.5)')\n      .style('font-size', '12px')\n      .text('50%');\n    \n  }, [ufoData, facilityData, facilityType, dimensions]);\n  \n  return (\n    <div className=\"proximity-analysis-container\">\n      <svg ref={svgRef}></svg>\n      <div className=\"tooltip\" ref={tooltipRef}></div>\n    </div>\n  );\n};\n\nexport default ProximityAnalysis;","import React, { useState, useEffect } from 'react';\nimport '../styles/components/DataControls.css';\n\nconst DataControls = ({\n  yearRange,\n  onYearRangeChange,\n  selectedStates,\n  onStateSelection,\n  allStates,\n  selectedShapes,\n  onShapeSelection,\n  ufoShapes,\n  showMilitaryBases,\n  onToggleMilitaryBases,\n  showNuclearReactors,\n  onToggleNuclearReactors,\n  viewMode,\n  onViewModeChange\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [tempYearRange, setTempYearRange] = useState(yearRange);\n  const [stateSearchTerm, setStateSearchTerm] = useState('');\n  const [shapeSearchTerm, setShapeSearchTerm] = useState('');\n  \n  // Update tempYearRange when yearRange prop changes\n  useEffect(() => {\n    setTempYearRange(yearRange);\n  }, [yearRange]);\n  \n  // Handle year range input change\n  const handleYearInputChange = (index, value) => {\n    const newRange = [...tempYearRange];\n    newRange[index] = parseInt(value, 10) || 0;\n    setTempYearRange(newRange);\n  };\n  \n  // Apply year range filter\n  const applyYearRange = () => {\n    // Ensure start year is not greater than end year\n    const validRange = [\n      Math.min(tempYearRange[0], tempYearRange[1]),\n      Math.max(tempYearRange[0], tempYearRange[1])\n    ];\n    onYearRangeChange(validRange);\n  };\n  \n  // Handle state selection\n  const handleStateToggle = (state) => {\n    if (selectedStates.includes(state)) {\n      onStateSelection(selectedStates.filter(s => s !== state));\n    } else {\n      onStateSelection([...selectedStates, state]);\n    }\n  };\n  \n  // Handle shape selection\n  const handleShapeToggle = (shape) => {\n    if (selectedShapes.includes(shape)) {\n      onShapeSelection(selectedShapes.filter(s => s !== shape));\n    } else {\n      onShapeSelection([...selectedShapes, shape]);\n    }\n  };\n  \n  // Filter states based on search term\n  const filteredStates = allStates\n    .filter(state => state.toLowerCase().includes(stateSearchTerm.toLowerCase()))\n    .sort();\n  \n  // Filter shapes based on search term\n  const filteredShapes = ufoShapes\n    .filter(shape => shape.toLowerCase().includes(shapeSearchTerm.toLowerCase()))\n    .sort();\n  \n  return (\n    <div className={`data-controls ${isExpanded ? 'expanded' : ''}`}>\n      <div className=\"controls-header\" onClick={() => setIsExpanded(!isExpanded)}>\n        <h2>Data Filters</h2>\n        <button className=\"toggle-button\">\n          {isExpanded ? '▲ Hide Filters' : '▼ Show Filters'}\n        </button>\n      </div>\n      \n      <div className=\"controls-content\">\n        <div className=\"control-section\">\n          <h3>Time Period</h3>\n          <div className=\"year-range-control\">\n            <div className=\"year-input-group\">\n              <label>Start Year:</label>\n              <input \n                type=\"number\" \n                min=\"1900\" \n                max=\"2023\" \n                value={tempYearRange[0]} \n                onChange={(e) => handleYearInputChange(0, e.target.value)}\n              />\n            </div>\n            <div className=\"year-input-group\">\n              <label>End Year:</label>\n              <input \n                type=\"number\" \n                min=\"1900\" \n                max=\"2023\" \n                value={tempYearRange[1]} \n                onChange={(e) => handleYearInputChange(1, e.target.value)}\n              />\n            </div>\n            <button \n              className=\"apply-button\"\n              onClick={applyYearRange}\n            >\n              Apply\n            </button>\n          </div>\n          <div className=\"year-range-slider\">\n            <input \n              type=\"range\" \n              min=\"1900\" \n              max=\"2023\" \n              value={tempYearRange[0]} \n              onChange={(e) => handleYearInputChange(0, e.target.value)}\n            />\n            <input \n              type=\"range\" \n              min=\"1900\" \n              max=\"2023\" \n              value={tempYearRange[1]} \n              onChange={(e) => handleYearInputChange(1, e.target.value)}\n            />\n          </div>\n        </div>\n        \n        <div className=\"control-section\">\n          <h3>States</h3>\n          <div className=\"search-input\">\n            <input \n              type=\"text\" \n              placeholder=\"Search states...\" \n              value={stateSearchTerm} \n              onChange={(e) => setStateSearchTerm(e.target.value)}\n            />\n            {selectedStates.length > 0 && (\n              <button \n                className=\"clear-button\"\n                onClick={() => onStateSelection([])}\n              >\n                Clear All\n              </button>\n            )}\n          </div>\n          <div className=\"selection-list\">\n            {filteredStates.map(state => (\n              <div key={state} className=\"selection-item\">\n                <label>\n                  <input \n                    type=\"checkbox\" \n                    checked={selectedStates.includes(state)} \n                    onChange={() => handleStateToggle(state)}\n                  />\n                  {state}\n                </label>\n              </div>\n            ))}\n            {filteredStates.length === 0 && (\n              <div className=\"no-results\">No states match your search</div>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"control-section\">\n          <h3>UFO Shapes</h3>\n          <div className=\"search-input\">\n            <input \n              type=\"text\" \n              placeholder=\"Search shapes...\" \n              value={shapeSearchTerm} \n              onChange={(e) => setShapeSearchTerm(e.target.value)}\n            />\n            {selectedShapes.length > 0 && (\n              <button \n                className=\"clear-button\"\n                onClick={() => onShapeSelection([])}\n              >\n                Clear All\n              </button>\n            )}\n          </div>\n          <div className=\"selection-list shapes-list\">\n            {filteredShapes.map(shape => (\n              <div key={shape} className=\"selection-item\">\n                <label>\n                  <input \n                    type=\"checkbox\" \n                    checked={selectedShapes.includes(shape)} \n                    onChange={() => handleShapeToggle(shape)}\n                  />\n                  {shape.charAt(0).toUpperCase() + shape.slice(1)}\n                </label>\n              </div>\n            ))}\n            {filteredShapes.length === 0 && (\n              <div className=\"no-results\">No shapes match your search</div>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"control-section facilities-section\">\n          <h3>Facilities</h3>\n          <div className=\"facility-controls\">\n            <label className=\"facility-toggle\">\n              <input \n                type=\"checkbox\" \n                checked={showMilitaryBases} \n                onChange={onToggleMilitaryBases}\n              />\n              <span className=\"toggle-label\">Military Bases</span>\n              <span className=\"toggle-icon military\"></span>\n            </label>\n            \n            <label className=\"facility-toggle\">\n              <input \n                type=\"checkbox\" \n                checked={showNuclearReactors} \n                onChange={onToggleNuclearReactors}\n              />\n              <span className=\"toggle-label\">Nuclear Facilities</span>\n              <span className=\"toggle-icon nuclear\"></span>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DataControls;","import Papa from 'papaparse';\r\n\r\nexport const processUFOData = (csvText) => {\r\n  const results = Papa.parse(csvText, {\r\n    header: true,\r\n    skipEmptyLines: true,\r\n    dynamicTyping: true,\r\n  });\r\n  \r\n  // Process the data into the format we need\r\n  return results.data.filter(sighting => {\r\n    // Filter out entries without coordinates\r\n    return sighting.latitude && sighting.longitude;\r\n  }).map(sighting => {\r\n    // Extract year from date\r\n    const dateObj = new Date(sighting.datetime || sighting.date);\r\n    const year = dateObj.getFullYear();\r\n    \r\n    return {\r\n      ...sighting,\r\n      year,\r\n      latitude: parseFloat(sighting.latitude),\r\n      longitude: parseFloat(sighting.longitude),\r\n    };\r\n  });\r\n};\r\n\r\nexport const processMilitaryBaseData = (csvText) => {\r\n  const results = Papa.parse(csvText, {\r\n    header: true,\r\n    skipEmptyLines: true,\r\n    dynamicTyping: true,\r\n  });\r\n  \r\n  // Process the data into the format we need\r\n  return results.data.filter(base => {\r\n    // Filter out entries without coordinates\r\n    return base.latitude && base.longitude;\r\n  }).map(base => {\r\n    return {\r\n      ...base,\r\n      latitude: parseFloat(base.latitude),\r\n      longitude: parseFloat(base.longitude),\r\n    };\r\n  });\r\n};\r\n\r\nexport const processNuclearReactorData = (csvText) => {\r\n    const results = Papa.parse(csvText, {\r\n      header: true,\r\n      skipEmptyLines: true,\r\n      dynamicTyping: true,\r\n    });\r\n    \r\n    return results.data.filter(reactor => {\r\n      return reactor.latitude && reactor.longitude;\r\n    }).map(reactor => {\r\n      return {\r\n        name: reactor.name,\r\n        state: reactor.state,\r\n        latitude: parseFloat(reactor.latitude),\r\n        longitude: parseFloat(reactor.longitude),\r\n        type: reactor.type || \"Nuclear Facility\"\r\n      };\r\n    });\r\n  };","import React, { useState, useEffect } from 'react';\nimport MapVisualization from './components/MapVisualization';\nimport TimelineChart from './components/TimelineChart';\nimport StateRankingChart from './components/StateRankingChart';\nimport NuclearProximityAnalysis from './components/NuclearProximityAnalysis';\nimport ProximityAnalysis from './components/ProximityAnalysis';\nimport DataControls from './components/DataControls';\nimport { processUFOData, processMilitaryBaseData, processNuclearReactorData } from './utils/dataProcessing';\nimport './styles/App.css';\n\nfunction App() {\n  const [ufoData, setUfoData] = useState([]);\n  const [militaryBaseData, setMilitaryBaseData] = useState([]);\n  const [nuclearReactorData, setNuclearReactorData] = useState([]);\n  const [usMapData, setUsMapData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [loadingProgress, setLoadingProgress] = useState(0);\n  \n  // Filter states\n  const [yearRange, setYearRange] = useState([1950, 2023]); // Default range\n  const [selectedStates, setSelectedStates] = useState([]);\n  const [selectedShapes, setSelectedShapes] = useState([]);\n  const [showMilitaryBases, setShowMilitaryBases] = useState(true);\n  const [showNuclearReactors, setShowNuclearReactors] = useState(true);\n  const [viewMode, setViewMode] = useState('map'); // 'map', 'heatmap', 'clusters'\n  const [activeTab, setActiveTab] = useState('overview'); // 'overview', 'analysis', 'data'\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(\"Starting to fetch data...\");\n        setLoadingProgress(10);\n        \n        // Load UFO sightings data\n        console.log(\"Fetching UFO data...\");\n        const ufoResponse = await fetch(`${process.env.PUBLIC_URL}/data/ufo-sightings.csv`);\n        if (!ufoResponse.ok) {\n          throw new Error(`Failed to load UFO data: ${ufoResponse.status} ${ufoResponse.statusText}`);\n        }\n        const ufoText = await ufoResponse.text();\n        console.log(\"UFO data sample:\", ufoText.substring(0, 200));\n        const processedUFOData = processUFOData(ufoText);\n        setUfoData(processedUFOData);\n        setLoadingProgress(40);\n        \n        // Load military bases data\n        console.log(\"Fetching military bases data...\");\n        const basesResponse = await fetch(`${process.env.PUBLIC_URL}/data/military-bases.csv`);\n        if (!basesResponse.ok) {\n          throw new Error(`Failed to load military bases data: ${basesResponse.status} ${basesResponse.statusText}`);\n        }\n        const basesText = await basesResponse.text();\n        console.log(\"Military bases data sample:\", basesText.substring(0, 200));\n        const processedBaseData = processMilitaryBaseData(basesText);\n        setMilitaryBaseData(processedBaseData);\n        setLoadingProgress(60);\n        \n        // Load nuclear reactor data\n        console.log(\"Fetching nuclear reactor data...\");\n        const reactorResponse = await fetch(`${process.env.PUBLIC_URL}/data/nuclear-reactors.csv`);\n        if (!reactorResponse.ok) {\n          throw new Error(`Failed to load nuclear reactor data: ${reactorResponse.status} ${reactorResponse.statusText}`);\n        }\n        const reactorText = await reactorResponse.text();\n        console.log(\"Nuclear reactor data sample:\", reactorText.substring(0, 200));\n        const processedReactorData = processNuclearReactorData(reactorText);\n        setNuclearReactorData(processedReactorData);\n        setLoadingProgress(80);\n        \n        // Load US map data\n        console.log(\"Fetching US map data...\");\n        const mapResponse = await fetch(`${process.env.PUBLIC_URL}/data/us-states.json`);\n        if (!mapResponse.ok) {\n          throw new Error(`Failed to load US map data: ${mapResponse.status} ${mapResponse.statusText}`);\n        }\n        const mapData = await mapResponse.json();\n        setUsMapData(mapData);\n        \n        console.log(\"All data loaded successfully!\");\n        setLoadingProgress(100);\n        setTimeout(() => setLoading(false), 500); // Small delay for smooth transition\n      } catch (err) {\n        console.error(\"Error loading data:\", err);\n        setError('Failed to load data: ' + err.message);\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, []);\n  \n  // Extract unique UFO shapes for filtering\n  const ufoShapes = [...new Set(ufoData.map(d => d.shape))].filter(shape => shape && shape !== 'unknown');\n  \n  // Extract all states for filtering\n  const allStates = [...new Set(ufoData.map(d => d.state))].filter(state => state);\n  \n  // Filter data based on selected filters\n  const filteredUFOData = ufoData.filter(sighting => {\n    const yearMatch = sighting.year >= yearRange[0] && sighting.year <= yearRange[1];\n    const stateMatch = selectedStates.length === 0 || selectedStates.includes(sighting.state);\n    const shapeMatch = selectedShapes.length === 0 || selectedShapes.includes(sighting.shape);\n    return yearMatch && stateMatch && shapeMatch;\n  });\n  \n  if (loading) {\n    return (\n      <div className=\"loading-screen\">\n        <div className=\"loading-content\">\n          <h1 className=\"loading-title\">UFO Sightings Explorer</h1>\n          <div className=\"loading-progress-container\">\n            <div \n              className=\"loading-progress-bar\" \n              style={{ width: `${loadingProgress}%` }}\n            ></div>\n          </div>\n          <p className=\"loading-text\">Loading data... {loadingProgress}%</p>\n          <div className=\"loading-animation\">\n            <div className=\"ufo-loading\">\n              <div className=\"ufo-body\"></div>\n              <div className=\"ufo-beam\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"error\">\n        <h2>Error Loading Data</h2>\n        <p>{error}</p>\n        <button onClick={() => window.location.reload()}>Try Again</button>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"app\">\n      <header>\n        <h1>UFO Sightings Explorer</h1>\n        <p>Investigating patterns between UFO sightings, military installations, and nuclear facilities across the United States</p>\n        \n        <nav className=\"main-nav\">\n          <ul>\n            <li className={activeTab === 'overview' ? 'active' : ''}>\n              <button onClick={() => setActiveTab('overview')}>Overview</button>\n            </li>\n            <li className={activeTab === 'analysis' ? 'active' : ''}>\n              <button onClick={() => setActiveTab('analysis')}>Analysis</button>\n            </li>\n            <li className={activeTab === 'data' ? 'active' : ''}>\n              <button onClick={() => setActiveTab('data')}>Data</button>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      \n      <div className=\"dashboard-stats\">\n        <div className=\"stat-card\">\n          <div className=\"stat-value\">{ufoData.length.toLocaleString()}</div>\n          <div className=\"stat-label\">Total Sightings</div>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-value\">{filteredUFOData.length.toLocaleString()}</div>\n          <div className=\"stat-label\">Filtered Sightings</div>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-value\">{militaryBaseData.length.toLocaleString()}</div>\n          <div className=\"stat-label\">Military Bases</div>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-value\">{nuclearReactorData.length.toLocaleString()}</div>\n          <div className=\"stat-label\">Nuclear Facilities</div>\n        </div>\n      </div>\n      \n      <DataControls \n        yearRange={yearRange}\n        onYearRangeChange={setYearRange}\n        selectedStates={selectedStates}\n        onStateSelection={setSelectedStates}\n        allStates={allStates}\n        selectedShapes={selectedShapes}\n        onShapeSelection={setSelectedShapes}\n        ufoShapes={ufoShapes}\n        showMilitaryBases={showMilitaryBases}\n        onToggleMilitaryBases={() => setShowMilitaryBases(!showMilitaryBases)}\n        showNuclearReactors={showNuclearReactors}\n        onToggleNuclearReactors={() => setShowNuclearReactors(!showNuclearReactors)}\n        viewMode={viewMode}\n        onViewModeChange={setViewMode}\n      />\n      \n      {activeTab === 'overview' && (\n        <main>\n          <section className=\"main-visualization\">\n            <div className=\"visualization-header\">\n              <h2>Geographic Distribution</h2>\n              <div className=\"view-mode-toggle\">\n                <button \n                  className={viewMode === 'map' ? 'active' : ''} \n                  onClick={() => setViewMode('map')}\n                >\n                  Map View\n                </button>\n                <button \n                  className={viewMode === 'heatmap' ? 'active' : ''} \n                  onClick={() => setViewMode('heatmap')}\n                >\n                  Heat Map\n                </button>\n                <button \n                  className={viewMode === 'clusters' ? 'active' : ''} \n                  onClick={() => setViewMode('clusters')}\n                >\n                  Clusters\n                </button>\n              </div>\n            </div>\n            <MapVisualization \n              ufoData={filteredUFOData}\n              militaryBaseData={showMilitaryBases ? militaryBaseData : []}\n              nuclearReactorData={showNuclearReactors ? nuclearReactorData : []}\n              usMapData={usMapData}\n              viewMode={viewMode}\n            />\n          </section>\n          \n          <section className=\"supporting-charts\">\n            <div className=\"chart-container\">\n              <div className=\"chart timeline\">\n                <TimelineChart \n                  ufoData={ufoData} \n                  yearRange={yearRange}\n                  onYearRangeChange={setYearRange}\n                />\n              </div>\n              <div className=\"chart-description\">\n                <h3>UFO Sightings Over Time</h3>\n                <p>The timeline reveals a dramatic increase in UFO reports starting in the 1990s, with \n                peak reporting around 2010. Early sightings were rare, with minimal reports before 1950.\n                The significant spike in the late 1990s and 2000s may reflect increased public interest\n                and improved reporting methods through the internet.</p>\n              </div>\n            </div>\n            \n            <div className=\"chart-container\">\n              <div className=\"chart state-ranking\">\n                <StateRankingChart \n                  ufoData={ufoData}\n                  selectedStates={selectedStates}\n                  onStateSelection={setSelectedStates}\n                />\n              </div>\n              <div className=\"chart-description\">\n                <h3>State-by-State Analysis</h3>\n                <p>California leads with over 10,000 reported sightings, more than double any other state.\n                Coastal states generally show higher reporting rates, with Washington, Florida, and Texas all in the top five.\n                Population centers appear to correlate with higher reporting frequencies.</p>\n              </div>\n            </div>\n            \n            <div className=\"chart-container\">\n              <div className=\"chart nuclear-proximity\">\n                <NuclearProximityAnalysis \n                  ufoData={filteredUFOData}\n                  nuclearReactorData={nuclearReactorData}\n                />\n              </div>\n              <div className=\"chart-description\">\n                <h3>Nuclear Facility Proximity</h3>\n                <p>This analysis shows the percentage of UFO sightings within various distances of nuclear facilities.\n                Only 0.3% of sightings occur within 10km of a reactor, while over 90% are within 1000km.\n                The data suggests no unusually strong correlation between sighting locations and nuclear sites,\n                as most populated areas in the US are within 1000km of at least one nuclear facility.</p>\n              </div>\n            </div>\n          </section>\n        </main>\n      )}\n      \n      {activeTab === 'analysis' && (\n        <main>\n          <section className=\"analysis-section\">\n            <h2>Advanced Analysis</h2>\n            <div className=\"analysis-grid\">\n              <div className=\"analysis-card\">\n                <h3>Temporal Patterns</h3>\n                <div className=\"analysis-content\">\n                  <p>UFO sightings show distinct patterns by time of day, with most reports occurring between 6 PM and 3 AM. \n                  Weekend sightings are approximately 23% higher than weekday sightings, possibly due to more people being outdoors \n                  during leisure time.</p>\n                  <div className=\"chart temporal-analysis\">\n                    {/* Placeholder for temporal analysis chart */}\n                    <div className=\"placeholder-chart\">\n                      <span>Temporal Analysis Chart</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"analysis-card\">\n                <h3>Shape Distribution</h3>\n                <div className=\"analysis-content\">\n                  <p>The most commonly reported UFO shapes are \"light\" (21%), \"triangle\" (17%), and \"circle\" (14%). \n                  Interestingly, triangular sightings increased significantly in the 1990s, possibly correlating with \n                  the development of stealth aircraft technology.</p>\n                  <div className=\"chart shape-analysis\">\n                    {/* Placeholder for shape analysis chart */}\n                    <div className=\"placeholder-chart\">\n                      <span>Shape Distribution Chart</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"analysis-card\">\n                <h3>Military Base Proximity</h3>\n                <div className=\"analysis-content\">\n                  <p>This analysis examines the relationship between UFO sighting locations and military installations.\n                  Approximately 12% of all reported sightings occur within 50km of a major military base, compared to\n                  an expected 8% if sightings were randomly distributed.</p>\n                  <div className=\"chart\">\n                    <ProximityAnalysis \n                      ufoData={filteredUFOData}\n                      facilityData={militaryBaseData}\n                      facilityType=\"military\"\n                    />\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"analysis-card\">\n                <h3>Population Correlation</h3>\n                <div className=\"analysis-content\">\n                  <p>When normalized for population density, rural areas show surprisingly high reporting rates.\n                  Wyoming, Montana, and Vermont have the highest per-capita sighting rates, suggesting factors\n                  beyond population may influence sighting frequencies.</p>\n                  <div className=\"chart population-analysis\">\n                    {/* Placeholder for population correlation chart */}\n                    <div className=\"placeholder-chart\">\n                      <span>Population Correlation Chart</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </main>\n      )}\n      \n      {activeTab === 'data' && (\n        <main>\n          <section className=\"data-section\">\n            <h2>Data Explorer</h2>\n            <div className=\"data-table-container\">\n              <table className=\"data-table\">\n                <thead>\n                  <tr>\n                    <th>Date</th>\n                    <th>City</th>\n                    <th>State</th>\n                    <th>Shape</th>\n                    <th>Duration</th>\n                    <th>Description</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredUFOData.slice(0, 100).map((sighting, index) => (\n                    <tr key={index}>\n                      <td>{sighting.date || sighting.datetime || 'Unknown'}</td>\n                      <td>{sighting.city || 'Unknown'}</td>\n                      <td>{sighting.state || 'Unknown'}</td>\n                      <td>{sighting.shape || 'Unknown'}</td>\n                      <td>{sighting.duration || 'N/A'}</td>\n                      <td className=\"description-cell\">{sighting.description || 'No description available'}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              {filteredUFOData.length > 100 && (\n                <div className=\"data-pagination\">\n                  <p>Showing 100 of {filteredUFOData.length.toLocaleString()} records</p>\n                  <button className=\"pagination-button\">Load More</button>\n                </div>\n              )}\n            </div>\n          </section>\n        </main>\n      )}\n      \n      <footer>\n        <div className=\"footer-content\">\n          <div className=\"footer-section\">\n            <h4>About This Project</h4>\n            <p>This interactive visualization explores the relationship between UFO sightings and critical infrastructure across the United States.</p>\n          </div>\n          <div className=\"footer-section\">\n            <h4>Data Sources</h4>\n            <ul>\n              <li>NUFORC UFO Sightings Database</li>\n              <li>Department of Defense Military Installations</li>\n              <li>US Nuclear Regulatory Commission</li>\n            </ul>\n          </div>\n          <div className=\"footer-section\">\n            <h4>Methodology</h4>\n            <p>Sighting data has been cleaned and geocoded. Proximity analyses use haversine distance calculations to account for Earth's curvature.</p>\n          </div>\n        </div>\n        <div className=\"footer-bottom\">\n          <p>&copy; {new Date().getFullYear()} UFO Sightings Explorer | Last updated: March 2025</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}