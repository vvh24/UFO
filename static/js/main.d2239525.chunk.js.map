{"version":3,"sources":["components/MapVisualization.js","components/TimelineChart.js","components/StateRankingChart.js","utils/dataProcessing.js","App.js","reportWebVitals.js","index.js"],"names":["MapVisualization","_ref","ufoData","militaryBaseData","usMapData","svgRef","useRef","tooltipRef","dimensions","setDimensions","useState","width","height","useEffect","handleResize","containerWidth","current","parentElement","clientWidth","window","addEventListener","removeEventListener","svg","d3","tooltip","selectAll","remove","attr","projection","fitSize","topojson","objects","states","path","console","log","features","sightingsByState","v","length","d","state","Array","from","keys","slice","map","stateIdToCode","forEach","feature","properties","name","id","stateNameToAbbr","Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming","District of Columbia","colorScale","domain","values","append","data","join","stateName","stateAbbr","count","get","on","event","has","toLowerCase","this","style","html","toLocaleString","pageX","pageY","coords","longitude","latitude","date","datetime","city","shape","duration","type","branch","legend","text","React","createElement","className","ref","TimelineChart","yearRange","margin","innerWidth","innerHeight","yearCounts","year","yearData","_ref2","sort","a","b","xScale","range","yScale","g","xAxis","ticks","tickFormat","call","yAxis","line","x","y","curve","datum","stateNameMap","AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","DC","PR","GU","VI","AS","MP","BC","ON","QC","AB","Wa","Ca","Tx","Fl","Ny","","StateRankingChart","stateCounts","stateData","stateCode","toUpperCase","warn","padding","bandwidth","currentTarget","processUFOData","csvText","Papa","parse","header","skipEmptyLines","dynamicTyping","filter","sighting","Date","getFullYear","parseFloat","processMilitaryBaseData","base","App","setUfoData","setMilitaryBaseData","setUsMapData","loading","setLoading","error","setError","setYearRange","selectedStates","setSelectedStates","showMilitaryBases","setShowMilitaryBases","async","ufoResponse","fetch","ufoText","processedUFOData","basesResponse","basesText","processedBaseData","mapResponse","mapData","json","err","message","fetchData","filteredUFOData","yearMatch","stateMatch","includes","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d2239525.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as topojson from 'topojson-client';\r\nimport '../styles/components/MapVisualization.css';\r\n\r\nconst MapVisualization = ({ ufoData, militaryBaseData, usMapData }) => {\r\n  const svgRef = useRef();\r\n  const tooltipRef = useRef();\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n  \r\n  // Handle window resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const containerWidth = svgRef.current.parentElement.clientWidth;\r\n      setDimensions({\r\n        width: containerWidth,\r\n        height: containerWidth * 0.6, // Maintain aspect ratio\r\n      });\r\n    };\r\n    \r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  \r\n  // Draw map when data or dimensions change\r\n  useEffect(() => {\r\n    if (!usMapData || !dimensions.width || !dimensions.height) return;\r\n    \r\n    const svg = d3.select(svgRef.current);\r\n    const tooltip = d3.select(tooltipRef.current);\r\n    \r\n    // Clear previous rendering\r\n    svg.selectAll('*').remove();\r\n    \r\n    svg\r\n      .attr('width', dimensions.width)\r\n      .attr('height', dimensions.height)\r\n      .attr('viewBox', [0, 0, dimensions.width, dimensions.height])\r\n      .attr('style', 'max-width: 100%; height: auto;');\r\n    \r\n    // Create projection\r\n    const projection = d3.geoAlbersUsa()\r\n      .fitSize([dimensions.width, dimensions.height], topojson.feature(usMapData, usMapData.objects.states));\r\n    \r\n    // Create path generator\r\n    const path = d3.geoPath().projection(projection);\r\n    \r\n    // Log some debug info about the map data\r\n    console.log(\"First feature properties:\", topojson.feature(usMapData, usMapData.objects.states).features[0]);\r\n    \r\n    // Group UFO data by state\r\n    const sightingsByState = d3.rollup(\r\n      ufoData,\r\n      v => v.length,\r\n      d => d.state\r\n    );\r\n    \r\n    // Debug: log state codes in UFO data\r\n    console.log(\"State codes in UFO data:\", Array.from(sightingsByState.keys()));\r\n    console.log(\"First few UFO state values:\", ufoData.slice(0, 5).map(d => d.state));\r\n    \r\n    // Create map of state ID to state code\r\n    const stateIdToCode = {};\r\n    topojson.feature(usMapData, usMapData.objects.states).features.forEach(feature => {\r\n      if (feature.properties && feature.properties.name) {\r\n        stateIdToCode[feature.id] = feature.properties.name;\r\n      }\r\n    });\r\n    \r\n    // Map of state names to abbreviations (for matching)\r\n    const stateNameToAbbr = {\r\n      'Alabama': 'AL', 'Alaska': 'AK', 'Arizona': 'AZ', 'Arkansas': 'AR', 'California': 'CA',\r\n      'Colorado': 'CO', 'Connecticut': 'CT', 'Delaware': 'DE', 'Florida': 'FL', 'Georgia': 'GA',\r\n      'Hawaii': 'HI', 'Idaho': 'ID', 'Illinois': 'IL', 'Indiana': 'IN', 'Iowa': 'IA',\r\n      'Kansas': 'KS', 'Kentucky': 'KY', 'Louisiana': 'LA', 'Maine': 'ME', 'Maryland': 'MD',\r\n      'Massachusetts': 'MA', 'Michigan': 'MI', 'Minnesota': 'MN', 'Mississippi': 'MS', 'Missouri': 'MO',\r\n      'Montana': 'MT', 'Nebraska': 'NE', 'Nevada': 'NV', 'New Hampshire': 'NH', 'New Jersey': 'NJ',\r\n      'New Mexico': 'NM', 'New York': 'NY', 'North Carolina': 'NC', 'North Dakota': 'ND', 'Ohio': 'OH',\r\n      'Oklahoma': 'OK', 'Oregon': 'OR', 'Pennsylvania': 'PA', 'Rhode Island': 'RI', 'South Carolina': 'SC',\r\n      'South Dakota': 'SD', 'Tennessee': 'TN', 'Texas': 'TX', 'Utah': 'UT', 'Vermont': 'VT',\r\n      'Virginia': 'VA', 'Washington': 'WA', 'West Virginia': 'WV', 'Wisconsin': 'WI', 'Wyoming': 'WY',\r\n      'District of Columbia': 'DC'\r\n    };\r\n    \r\n    // Color scale for states based on number of sightings\r\n    const colorScale = d3.scaleSequential(d3.interpolateBlues)\r\n      .domain([0, d3.max(Array.from(sightingsByState.values())) || 1]);\r\n    \r\n    // Draw states\r\n    const states = svg.append('g')\r\n      .selectAll('path')\r\n      .data(topojson.feature(usMapData, usMapData.objects.states).features)\r\n      .join('path')\r\n      .attr('fill', d => {\r\n        const stateName = d.properties.name;\r\n        const stateAbbr = stateNameToAbbr[stateName];\r\n        const count = sightingsByState.get(stateAbbr) || 0;\r\n        return colorScale(count);\r\n      })\r\n      .attr('stroke', '#999')\r\n      .attr('stroke-width', 0.5)\r\n      .attr('d', path)\r\n      .attr('class', 'state')\r\n      .on('mouseover', function(event, d) {\r\n        const stateName = d.properties.name;\r\n        const stateAbbr = stateNameToAbbr[stateName];\r\n        \r\n        // Try to find the correct count by trying different state code formats\r\n        let count = 0;\r\n        if (stateAbbr && sightingsByState.has(stateAbbr)) {\r\n          count = sightingsByState.get(stateAbbr);\r\n        } else if (stateAbbr && sightingsByState.has(stateAbbr.toLowerCase())) {\r\n          count = sightingsByState.get(stateAbbr.toLowerCase());\r\n        } else if (stateName && sightingsByState.has(stateName)) {\r\n          count = sightingsByState.get(stateName);\r\n        }\r\n        \r\n        d3.select(this)\r\n          .attr('stroke', '#333')\r\n          .attr('stroke-width', 1.5);\r\n          \r\n        tooltip\r\n          .style('opacity', 1)\r\n          .html(`<strong>${stateName}</strong><br>${count.toLocaleString()} UFO sightings`)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mousemove', function(event) {\r\n        tooltip\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mouseout', function() {\r\n        d3.select(this)\r\n          .attr('stroke', '#999')\r\n          .attr('stroke-width', 0.5);\r\n          \r\n        tooltip.style('opacity', 0);\r\n      });\r\n    \r\n    // Add UFO sightings\r\n    svg.append('g')\r\n      .selectAll('circle')\r\n      .data(ufoData)\r\n      .join('circle')\r\n      .attr('cx', d => {\r\n        const coords = projection([d.longitude, d.latitude]);\r\n        if (!coords) return null; // Skip this point if projection returns null\r\n        return coords[0];\r\n      })\r\n      .attr('cy', d => {\r\n        const coords = projection([d.longitude, d.latitude]);\r\n        if (!coords) return null; // Skip this point if projection returns null\r\n        return coords[1];\r\n      })\r\n      .attr('r', 3)\r\n      .attr('fill', 'rgba(255, 215, 0, 0.6)')  // Gold color with transparency\r\n      .attr('stroke', 'rgba(255, 215, 0, 0.9)')\r\n      .attr('stroke-width', 1)\r\n      .attr('class', 'ufo-sighting')\r\n      .on('mouseover', function(event, d) {\r\n        d3.select(this)\r\n          .attr('r', 6)\r\n          .attr('fill', 'rgba(255, 215, 0, 0.9)');\r\n        \r\n        tooltip\r\n          .style('opacity', 1)\r\n          .html(`\r\n            <strong>UFO Sighting</strong><br>\r\n            Date: ${d.date || d.datetime || 'Unknown'}<br>\r\n            Location: ${d.city || 'Unknown'}, ${d.state || 'Unknown'}<br>\r\n            Shape: ${d.shape || 'Unknown'}<br>\r\n            Duration: ${d.duration || 'N/A'}\r\n          `)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mouseout', function() {\r\n        d3.select(this)\r\n          .attr('r', 3)\r\n          .attr('fill', 'rgba(255, 215, 0, 0.6)');\r\n          \r\n        tooltip.style('opacity', 0);\r\n      });\r\n    \r\n    // Add military bases\r\n    if (militaryBaseData.length > 0) {\r\n      svg.append('g')\r\n        .selectAll('path')\r\n        .data(militaryBaseData)\r\n        .join('path')\r\n        .attr('transform', d => {\r\n          const coords = projection([d.longitude, d.latitude]);\r\n          if (!coords) return null; // Skip this point if projection returns null\r\n          return `translate(${coords[0]}, ${coords[1]})`;\r\n        })\r\n        .attr('d', 'M-5,-5 L0,-10 L5,-5 L5,5 L-5,5 Z') // Pentagon shape for military bases\r\n        .attr('fill', 'rgba(220, 20, 60, 0.7)') // Crimson color with transparency\r\n        .attr('stroke', 'rgba(220, 20, 60, 0.9)')\r\n        .attr('stroke-width', 1)\r\n        .attr('class', 'military-base')\r\n        .on('mouseover', function(event, d) {\r\n          d3.select(this)\r\n            .attr('fill', 'rgba(220, 20, 60, 0.9)');\r\n            \r\n          tooltip\r\n            .style('opacity', 1)\r\n            .html(`\r\n              <strong>Military Base</strong><br>\r\n              Name: ${d.name || 'Unknown'}<br>\r\n              Type: ${d.type || 'N/A'}<br>\r\n              Branch: ${d.branch || 'N/A'}\r\n            `)\r\n            .style('left', (event.pageX + 10) + 'px')\r\n            .style('top', (event.pageY - 28) + 'px');\r\n        })\r\n        .on('mouseout', function() {\r\n          d3.select(this)\r\n            .attr('fill', 'rgba(220, 20, 60, 0.7)');\r\n            \r\n          tooltip.style('opacity', 0);\r\n        });\r\n    }\r\n    \r\n    // Add legend\r\n    const legend = svg.append('g')\r\n      .attr('transform', `translate(20, ${dimensions.height - 80})`);\r\n      \r\n    // UFO sightings legend\r\n    legend.append('circle')\r\n      .attr('cx', 10)\r\n      .attr('cy', 10)\r\n      .attr('r', 5)\r\n      .attr('fill', 'rgba(255, 215, 0, 0.6)')  \r\n      .attr('stroke', 'rgba(255, 215, 0, 0.9)')\r\n      .attr('stroke-width', 1);\r\n      \r\n    legend.append('text')\r\n      .attr('x', 25)\r\n      .attr('y', 15)\r\n      .text('UFO Sighting')\r\n      .attr('font-size', '12px');\r\n      \r\n    // Military base legend  \r\n    legend.append('path')\r\n      .attr('transform', 'translate(10, 40)')\r\n      .attr('d', 'M-4,-4 L0,-8 L4,-4 L4,4 L-4,4 Z')\r\n      .attr('fill', 'rgba(220, 20, 60, 0.7)')\r\n      .attr('stroke', 'rgba(220, 20, 60, 0.9)')\r\n      .attr('stroke-width', 1);\r\n      \r\n    legend.append('text')\r\n      .attr('x', 25)\r\n      .attr('y', 45)\r\n      .text('Military Base')\r\n      .attr('font-size', '12px');\r\n      \r\n  }, [usMapData, ufoData, militaryBaseData, dimensions]);\r\n  \r\n  return (\r\n    <div className=\"map-container\">\r\n      <svg ref={svgRef}></svg>\r\n      <div className=\"tooltip\" ref={tooltipRef}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapVisualization;","import React, { useRef, useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport '../styles/components/TimelineChart.css';\r\n\r\nconst TimelineChart = ({ ufoData, yearRange }) => {\r\n  const svgRef = useRef();\r\n  const tooltipRef = useRef();\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n  \r\n  // Handle window resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const containerWidth = svgRef.current.parentElement.clientWidth;\r\n      setDimensions({\r\n        width: containerWidth,\r\n        height: 300, // Fixed height\r\n      });\r\n    };\r\n    \r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  \r\n  // Draw timeline chart\r\n  useEffect(() => {\r\n    if (!ufoData.length || !dimensions.width || !dimensions.height) return;\r\n    \r\n    const svg = d3.select(svgRef.current);\r\n    const tooltip = d3.select(tooltipRef.current);\r\n    \r\n    // Clear previous rendering\r\n    svg.selectAll('*').remove();\r\n    \r\n    svg\r\n      .attr('width', dimensions.width)\r\n      .attr('height', dimensions.height)\r\n      .attr('viewBox', [0, 0, dimensions.width, dimensions.height])\r\n      .attr('style', 'max-width: 100%; height: auto;');\r\n    \r\n    // Add title\r\n    svg.append('text')\r\n      .attr('x', dimensions.width / 2)\r\n      .attr('y', 20)\r\n      .attr('text-anchor', 'middle')\r\n      .style('font-size', '16px')\r\n      .style('font-weight', 'bold')\r\n      .text('UFO Sightings Over Time');\r\n    \r\n    // Set margins\r\n    const margin = { top: 40, right: 30, bottom: 60, left: 60 };\r\n    const innerWidth = dimensions.width - margin.left - margin.right;\r\n    const innerHeight = dimensions.height - margin.top - margin.bottom;\r\n    \r\n    // Aggregate data by year\r\n    const yearCounts = d3.rollup(\r\n      ufoData,\r\n      v => v.length,\r\n      d => d.year\r\n    );\r\n    \r\n    // Convert to array for line chart\r\n    const yearData = Array.from(yearCounts, ([year, count]) => ({ year, count }))\r\n      .sort((a, b) => a.year - b.year);\r\n    \r\n    // Create scales\r\n    const xScale = d3.scaleLinear()\r\n      .domain([d3.min(yearData, d => d.year), d3.max(yearData, d => d.year)])\r\n      .range([0, innerWidth]);\r\n    \r\n    const yScale = d3.scaleLinear()\r\n      .domain([0, d3.max(yearData, d => d.count) * 1.1]) // Add 10% padding\r\n      .range([innerHeight, 0]);\r\n    \r\n    // Create main group\r\n    const g = svg.append('g')\r\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n    \r\n    // Add axes\r\n    const xAxis = d3.axisBottom(xScale)\r\n      .ticks(10)\r\n      .tickFormat(d => d);\r\n    \r\n    g.append('g')\r\n      .attr('transform', `translate(0, ${innerHeight})`)\r\n      .call(xAxis);\r\n    \r\n    const yAxis = d3.axisLeft(yScale)\r\n      .ticks(10);\r\n    \r\n    g.append('g')\r\n      .call(yAxis);\r\n    \r\n    // Add axis labels\r\n    g.append('text')\r\n      .attr('transform', `translate(${innerWidth / 2}, ${innerHeight + 40})`)\r\n      .style('text-anchor', 'middle')\r\n      .text('Year');\r\n    \r\n    g.append('text')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('y', -40)\r\n      .attr('x', -innerHeight / 2)\r\n      .style('text-anchor', 'middle')\r\n      .text('Number of Sightings');\r\n    \r\n    // Create line generator\r\n    const line = d3.line()\r\n      .x(d => xScale(d.year))\r\n      .y(d => yScale(d.count))\r\n      .curve(d3.curveMonotoneX);\r\n    \r\n    // Add the line\r\n    g.append('path')\r\n      .datum(yearData)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', 'steelblue')\r\n      .attr('stroke-width', 2)\r\n      .attr('d', line);\r\n    \r\n    // Add dots for each data point\r\n    g.selectAll('.dot')\r\n      .data(yearData)\r\n      .join('circle')\r\n      .attr('class', 'dot')\r\n      .attr('cx', d => xScale(d.year))\r\n      .attr('cy', d => yScale(d.count))\r\n      .attr('r', 4)\r\n      .attr('fill', 'steelblue')\r\n      .on('mouseover', (event, d) => {\r\n        tooltip\r\n          .style('opacity', 1)\r\n          .html(`<strong>${d.year}</strong>: ${d.count} sightings`)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mouseout', () => {\r\n        tooltip.style('opacity', 0);\r\n      });\r\n    \r\n  }, [ufoData, dimensions]);\r\n  \r\n  return (\r\n    <div className=\"timeline-container\">\r\n      <svg ref={svgRef}></svg>\r\n      <div className=\"tooltip\" ref={tooltipRef}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimelineChart;","import React, { useRef, useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport '../styles/components/StateRankingChart.css';\r\n\r\n// Add this state abbreviation to full name mapping\r\nconst stateNameMap = {\r\n  'AL': 'Alabama',\r\n  'AK': 'Alaska',\r\n  'AZ': 'Arizona',\r\n  'AR': 'Arkansas',\r\n  'CA': 'California',\r\n  'CO': 'Colorado',\r\n  'CT': 'Connecticut',\r\n  'DE': 'Delaware',\r\n  'FL': 'Florida',\r\n  'GA': 'Georgia',\r\n  'HI': 'Hawaii',\r\n  'ID': 'Idaho',\r\n  'IL': 'Illinois',\r\n  'IN': 'Indiana',\r\n  'IA': 'Iowa',\r\n  'KS': 'Kansas',\r\n  'KY': 'Kentucky',\r\n  'LA': 'Louisiana',\r\n  'ME': 'Maine',\r\n  'MD': 'Maryland',\r\n  'MA': 'Massachusetts',\r\n  'MI': 'Michigan',\r\n  'MN': 'Minnesota',\r\n  'MS': 'Mississippi',\r\n  'MO': 'Missouri',\r\n  'MT': 'Montana',\r\n  'NE': 'Nebraska',\r\n  'NV': 'Nevada',\r\n  'NH': 'New Hampshire',\r\n  'NJ': 'New Jersey',\r\n  'NM': 'New Mexico',\r\n  'NY': 'New York',\r\n  'NC': 'North Carolina',\r\n  'ND': 'North Dakota',\r\n  'OH': 'Ohio',\r\n  'OK': 'Oklahoma',\r\n  'OR': 'Oregon',\r\n  'PA': 'Pennsylvania',\r\n  'RI': 'Rhode Island',\r\n  'SC': 'South Carolina',\r\n  'SD': 'South Dakota',\r\n  'TN': 'Tennessee',\r\n  'TX': 'Texas',\r\n  'UT': 'Utah',\r\n  'VT': 'Vermont',\r\n  'VA': 'Virginia',\r\n  'WA': 'Washington',\r\n  'WV': 'West Virginia',\r\n  'WI': 'Wisconsin',\r\n  'WY': 'Wyoming',\r\n  'DC': 'District of Columbia',\r\n  // Add potential missing territories/regions\r\n  'PR': 'Puerto Rico',\r\n  'GU': 'Guam',\r\n  'VI': 'Virgin Islands',\r\n  'AS': 'American Samoa',\r\n  'MP': 'Northern Mariana Islands',\r\n  // Canadian provinces that might be in the data\r\n  'BC': 'British Columbia',\r\n  'ON': 'Ontario',\r\n  'QC': 'Quebec',\r\n  'AB': 'Alberta',\r\n  // Add common variations or potential miscodings\r\n  'Wa': 'Washington',\r\n  'Ca': 'California',\r\n  'Tx': 'Texas',\r\n  'Fl': 'Florida',\r\n  'Ny': 'New York',\r\n  '': 'Unknown Location'\r\n};\r\n\r\nconst StateRankingChart = ({ ufoData }) => {\r\n  const svgRef = useRef();\r\n  const tooltipRef = useRef();\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n  \r\n  // Handle window resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const containerWidth = svgRef.current.parentElement.clientWidth;\r\n      setDimensions({\r\n        width: containerWidth,\r\n        height: 400, // Fixed height\r\n      });\r\n    };\r\n    \r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  \r\n  // Draw bar chart\r\n  useEffect(() => {\r\n    if (!ufoData.length || !dimensions.width || !dimensions.height) return;\r\n    \r\n    const svg = d3.select(svgRef.current);\r\n    const tooltip = d3.select(tooltipRef.current);\r\n    \r\n    // Clear previous rendering\r\n    svg.selectAll('*').remove();\r\n    \r\n    svg\r\n      .attr('width', dimensions.width)\r\n      .attr('height', dimensions.height)\r\n      .attr('viewBox', [0, 0, dimensions.width, dimensions.height])\r\n      .attr('style', 'max-width: 100%; height: auto;');\r\n    \r\n    // Add title\r\n    svg.append('text')\r\n      .attr('x', dimensions.width / 2)\r\n      .attr('y', 20)\r\n      .attr('text-anchor', 'middle')\r\n      .style('font-size', '16px')\r\n      .style('font-weight', 'bold')\r\n      .text('Top 10 States by UFO Sightings');\r\n    \r\n    // Set margins\r\n    const margin = { top: 40, right: 30, bottom: 60, left: 120 }; // Increased left margin for longer state names\r\n    const innerWidth = dimensions.width - margin.left - margin.right;\r\n    const innerHeight = dimensions.height - margin.top - margin.bottom;\r\n    \r\n    // Group data by state\r\n    const stateCounts = d3.rollup(\r\n      ufoData,\r\n      v => v.length,\r\n      d => d.state\r\n    );\r\n    \r\n    // Log state codes to debug\r\n    console.log(\"State codes in data for ranking chart:\", Array.from(stateCounts.keys()));\r\n    \r\n    // Convert to array and sort by count descending\r\n    const stateData = Array.from(stateCounts, ([state, count]) => {\r\n      // Ensure state code is uppercase for proper mapping\r\n      const stateCode = state ? state.toUpperCase() : state;\r\n      \r\n      // Log each state code to identify the missing one\r\n      console.log(\"Processing state:\", state, \"count:\", count);\r\n      \r\n      // Add fallback for the unnamed state\r\n      let stateName = stateNameMap[stateCode];\r\n      if (!stateName) {\r\n        console.warn(\"Could not find state name for code:\", stateCode);\r\n        stateName = stateCode || \"Unknown State\";\r\n      }\r\n      \r\n      return {\r\n        state: stateCode,\r\n        stateName: stateName, \r\n        count\r\n      };\r\n    })\r\n      .sort((a, b) => b.count - a.count)\r\n      .slice(0, 10); // Get top 10\r\n    \r\n    console.log(\"Final top 10 states data:\", stateData);\r\n    \r\n    // Create scales\r\n    const xScale = d3.scaleLinear()\r\n      .domain([0, d3.max(stateData, d => d.count) * 1.1])\r\n      .range([0, innerWidth]);\r\n    \r\n    const yScale = d3.scaleBand()\r\n      .domain(stateData.map(d => d.stateName)) // Use the full state name\r\n      .range([0, innerHeight])\r\n      .padding(0.2);\r\n    \r\n    // Create main group\r\n    const g = svg.append('g')\r\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n    \r\n    // Add axes\r\n    const xAxis = d3.axisBottom(xScale)\r\n      .ticks(6)\r\n      .tickFormat(d3.format(',d')); // Format numbers with commas\r\n    \r\n    g.append('g')\r\n      .attr('transform', `translate(0, ${innerHeight})`)\r\n      .call(xAxis);\r\n    \r\n    const yAxis = d3.axisLeft(yScale);\r\n    \r\n    g.append('g')\r\n      .call(yAxis);\r\n    \r\n    // Add axis labels\r\n    g.append('text')\r\n      .attr('transform', `translate(${innerWidth / 2}, ${innerHeight + 40})`)\r\n      .style('text-anchor', 'middle')\r\n      .text('Number of Sightings');\r\n    \r\n    // Add bars\r\n    g.selectAll('.bar')\r\n      .data(stateData)\r\n      .join('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', 0)\r\n      .attr('y', d => yScale(d.stateName))\r\n      .attr('width', d => xScale(d.count))\r\n      .attr('height', yScale.bandwidth())\r\n      .attr('fill', 'steelblue')\r\n      .on('mouseover', (event, d) => {\r\n        // Highlight the bar\r\n        d3.select(event.currentTarget)\r\n          .attr('fill', '#3a7ca5');\r\n        \r\n        tooltip\r\n          .style('opacity', 1)\r\n          .html(`<strong>${d.stateName}</strong>: ${d.count.toLocaleString()} sightings`)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mouseout', (event) => {\r\n        // Restore original bar color\r\n        d3.select(event.currentTarget)\r\n          .attr('fill', 'steelblue');\r\n          \r\n        tooltip.style('opacity', 0);\r\n      });\r\n    \r\n    // Add value labels at the end of each bar\r\n    g.selectAll('.bar-label')\r\n      .data(stateData)\r\n      .join('text')\r\n      .attr('class', 'bar-label')\r\n      .attr('x', d => xScale(d.count) + 5)\r\n      .attr('y', d => yScale(d.stateName) + yScale.bandwidth() / 2 + 5)\r\n      .attr('font-size', '12px')\r\n      .text(d => d.count.toLocaleString());\r\n    \r\n  }, [ufoData, dimensions]);\r\n  \r\n  return (\r\n    <div className=\"state-ranking-container\">\r\n      <svg ref={svgRef}></svg>\r\n      <div className=\"tooltip\" ref={tooltipRef}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StateRankingChart;","import Papa from 'papaparse';\r\n\r\nexport const processUFOData = (csvText) => {\r\n  const results = Papa.parse(csvText, {\r\n    header: true,\r\n    skipEmptyLines: true,\r\n    dynamicTyping: true,\r\n  });\r\n  \r\n  // Process the data into the format we need\r\n  return results.data.filter(sighting => {\r\n    // Filter out entries without coordinates\r\n    return sighting.latitude && sighting.longitude;\r\n  }).map(sighting => {\r\n    // Extract year from date\r\n    const dateObj = new Date(sighting.datetime || sighting.date);\r\n    const year = dateObj.getFullYear();\r\n    \r\n    return {\r\n      ...sighting,\r\n      year,\r\n      latitude: parseFloat(sighting.latitude),\r\n      longitude: parseFloat(sighting.longitude),\r\n    };\r\n  });\r\n};\r\n\r\nexport const processMilitaryBaseData = (csvText) => {\r\n  const results = Papa.parse(csvText, {\r\n    header: true,\r\n    skipEmptyLines: true,\r\n    dynamicTyping: true,\r\n  });\r\n  \r\n  // Process the data into the format we need\r\n  return results.data.filter(base => {\r\n    // Filter out entries without coordinates\r\n    return base.latitude && base.longitude;\r\n  }).map(base => {\r\n    return {\r\n      ...base,\r\n      latitude: parseFloat(base.latitude),\r\n      longitude: parseFloat(base.longitude),\r\n    };\r\n  });\r\n};","import React, { useState, useEffect } from 'react';\nimport MapVisualization from './components/MapVisualization';\nimport TimelineChart from './components/TimelineChart';\nimport StateRankingChart from './components/StateRankingChart';\nimport { processUFOData, processMilitaryBaseData } from './utils/dataProcessing';\nimport './styles/App.css';\n\nfunction App() {\n  const [ufoData, setUfoData] = useState([]);\n  const [militaryBaseData, setMilitaryBaseData] = useState([]);\n  const [usMapData, setUsMapData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Filter states\n  const [yearRange, setYearRange] = useState([1950, 2023]);\n  const [selectedStates, setSelectedStates] = useState([]);\n  const [showMilitaryBases, setShowMilitaryBases] = useState(true);\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Load UFO sightings data\n        const ufoResponse = await fetch(`${process.env.PUBLIC_URL}/data/ufo-sightings.csv`);\n        const ufoText = await ufoResponse.text();\n        const processedUFOData = processUFOData(ufoText);\n        setUfoData(processedUFOData);\n        \n        // Load military bases data\n        const basesResponse = await fetch(`${process.env.PUBLIC_URL}/data/military-bases.csv`);\n        const basesText = await basesResponse.text();\n        const processedBaseData = processMilitaryBaseData(basesText);\n        setMilitaryBaseData(processedBaseData);\n        \n        // Load US map data\n        const mapResponse = await fetch(`${process.env.PUBLIC_URL}/data/us-states.json`);\n        const mapData = await mapResponse.json();\n        setUsMapData(mapData);\n        \n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load data: ' + err.message);\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, []);\n  \n  // Filter data based on selected filters\n  const filteredUFOData = ufoData.filter(sighting => {\n    const yearMatch = sighting.year >= yearRange[0] && sighting.year <= yearRange[1];\n    const stateMatch = selectedStates.length === 0 || selectedStates.includes(sighting.state);\n    return yearMatch && stateMatch;\n  });\n  \n  if (loading) return <div className=\"loading\">Loading data...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n  \n  return (\n    <div className=\"app\">\n      <header>\n        <h1>UFO Sightings & Military Bases Visualization</h1>\n        <p>Exploring the relationship between reported UFO sightings and US military installations</p>\n      </header>\n      \n      <main>\n        <section className=\"main-visualization\">\n          <MapVisualization \n            ufoData={filteredUFOData}\n            militaryBaseData={showMilitaryBases ? militaryBaseData : []}\n            usMapData={usMapData}\n          />\n        </section>\n        \n        <section className=\"supporting-charts\">\n          <div className=\"chart timeline\">\n            <TimelineChart ufoData={ufoData} yearRange={yearRange} />\n          </div>\n          \n          <div className=\"chart state-ranking\">\n            <StateRankingChart ufoData={ufoData} />\n          </div>\n        </section>\n      </main>\n      \n      <footer>\n        <p>Data sources: NUFORC UFO Sightings Database, Department of Defense Military Installations</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}